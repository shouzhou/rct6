; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\User -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User\app\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_led.crf ..\..\User\bsp\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;51     */
;;;52     void bsp_InitLed(void)
000000  b508              PUSH     {r3,lr}
;;;53     {
;;;54     	GPIO_InitTypeDef GPIO_InitStructure;
;;;55     
;;;56     	/* 打开GPIO时钟 */
;;;57     	RCC_APB2PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;58     
;;;59     	/*
;;;60     		配置所有的LED指示灯GPIO为推挽输出模式
;;;61     		由于将GPIO设置为输出时，GPIO输出寄存器的值缺省是0，因此会驱动LED点亮.
;;;62     		这是我不希望的，因此在改变GPIO为输出前，先关闭LED指示灯
;;;63     	*/
;;;64     	bsp_LedOff(1);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       bsp_LedOff
;;;65     	bsp_LedOff(2);
000010  2002              MOVS     r0,#2
000012  f7fffffe          BL       bsp_LedOff
;;;66     	bsp_LedOff(3);
000016  2003              MOVS     r0,#3
000018  f7fffffe          BL       bsp_LedOff
;;;67     	bsp_LedOff(4);
00001c  2004              MOVS     r0,#4
00001e  f7fffffe          BL       bsp_LedOff
;;;68     
;;;69     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000022  2003              MOVS     r0,#3
000024  f88d0002          STRB     r0,[sp,#2]
;;;70     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */
000028  2010              MOVS     r0,#0x10
00002a  f88d0003          STRB     r0,[sp,#3]
;;;71     	
;;;72     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
00002e  2020              MOVS     r0,#0x20
000030  f8ad0000          STRH     r0,[sp,#0]
;;;73     	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
000034  4669              MOV      r1,sp
000036  480c              LDR      r0,|L1.104|
000038  f7fffffe          BL       GPIO_Init
;;;74     
;;;75     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED2;
00003c  2020              MOVS     r0,#0x20
00003e  f8ad0000          STRH     r0,[sp,#0]
;;;76     	GPIO_Init(GPIO_PORT_LED2, &GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  4808              LDR      r0,|L1.104|
000046  f7fffffe          BL       GPIO_Init
;;;77     
;;;78     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED3;
00004a  2020              MOVS     r0,#0x20
00004c  f8ad0000          STRH     r0,[sp,#0]
;;;79     	GPIO_Init(GPIO_PORT_LED3, &GPIO_InitStructure);
000050  4669              MOV      r1,sp
000052  4805              LDR      r0,|L1.104|
000054  f7fffffe          BL       GPIO_Init
;;;80     
;;;81     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED4;
000058  2020              MOVS     r0,#0x20
00005a  f8ad0000          STRH     r0,[sp,#0]
;;;82     	GPIO_Init(GPIO_PORT_LED4, &GPIO_InitStructure);
00005e  4669              MOV      r1,sp
000060  4801              LDR      r0,|L1.104|
000062  f7fffffe          BL       GPIO_Init
;;;83     }
000066  bd08              POP      {r3,pc}
;;;84     
                          ENDP

                  |L1.104|
                          DCD      0x40010800

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                  bsp_IsLedOn PROC
;;;180    */
;;;181    uint8_t bsp_IsLedOn(uint8_t _no)
000000  4601              MOV      r1,r0
;;;182    {
;;;183    	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L2.24|
;;;184    	{
;;;185    		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
000006  4816              LDR      r0,|L2.96|
000008  6800              LDR      r0,[r0,#0]
00000a  f0000020          AND      r0,r0,#0x20
00000e  b908              CBNZ     r0,|L2.20|
;;;186    		{
;;;187    			return 1;
000010  2001              MOVS     r0,#1
                  |L2.18|
;;;188    		}
;;;189    		return 0;
;;;190    	}
;;;191    	else if (_no == 2)
;;;192    	{
;;;193    		if ((GPIO_PORT_LED2->ODR & GPIO_PIN_LED2) == 0)
;;;194    		{
;;;195    			return 1;
;;;196    		}
;;;197    		return 0;
;;;198    	}
;;;199    	else if (_no == 3)
;;;200    	{
;;;201    		if ((GPIO_PORT_LED3->ODR & GPIO_PIN_LED3) == 0)
;;;202    		{
;;;203    			return 1;
;;;204    		}
;;;205    		return 0;
;;;206    	}
;;;207    	else if (_no == 4)
;;;208    	{
;;;209    		if ((GPIO_PORT_LED4->ODR & GPIO_PIN_LED4) == 0)
;;;210    		{
;;;211    			return 1;
;;;212    		}
;;;213    		return 0;
;;;214    	}
;;;215    
;;;216    	return 0;
;;;217    }
000012  4770              BX       lr
                  |L2.20|
000014  2000              MOVS     r0,#0                 ;189
000016  e7fc              B        |L2.18|
                  |L2.24|
000018  2902              CMP      r1,#2                 ;191
00001a  d108              BNE      |L2.46|
00001c  4810              LDR      r0,|L2.96|
00001e  6800              LDR      r0,[r0,#0]            ;193
000020  f0000020          AND      r0,r0,#0x20           ;193
000024  b908              CBNZ     r0,|L2.42|
000026  2001              MOVS     r0,#1                 ;195
000028  e7f3              B        |L2.18|
                  |L2.42|
00002a  2000              MOVS     r0,#0                 ;197
00002c  e7f1              B        |L2.18|
                  |L2.46|
00002e  2903              CMP      r1,#3                 ;199
000030  d108              BNE      |L2.68|
000032  480b              LDR      r0,|L2.96|
000034  6800              LDR      r0,[r0,#0]            ;201
000036  f0000020          AND      r0,r0,#0x20           ;201
00003a  b908              CBNZ     r0,|L2.64|
00003c  2001              MOVS     r0,#1                 ;203
00003e  e7e8              B        |L2.18|
                  |L2.64|
000040  2000              MOVS     r0,#0                 ;205
000042  e7e6              B        |L2.18|
                  |L2.68|
000044  2904              CMP      r1,#4                 ;207
000046  d108              BNE      |L2.90|
000048  4805              LDR      r0,|L2.96|
00004a  6800              LDR      r0,[r0,#0]            ;209
00004c  f0000020          AND      r0,r0,#0x20           ;209
000050  b908              CBNZ     r0,|L2.86|
000052  2001              MOVS     r0,#1                 ;211
000054  e7dd              B        |L2.18|
                  |L2.86|
000056  2000              MOVS     r0,#0                 ;213
000058  e7db              B        |L2.18|
                  |L2.90|
00005a  2000              MOVS     r0,#0                 ;216
00005c  e7d9              B        |L2.18|
;;;218    
                          ENDP

00005e  0000              DCW      0x0000
                  |L2.96|
                          DCD      0x4001080c

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                  bsp_LedOff PROC
;;;122    */
;;;123    void bsp_LedOff(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;124    {
;;;125    	_no--;
000002  b2c8              UXTB     r0,r1
;;;126    
;;;127    	if (_no == 0)
000004  b918              CBNZ     r0,|L3.14|
;;;128    	{
;;;129    		GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
000006  2120              MOVS     r1,#0x20
000008  4a0a              LDR      r2,|L3.52|
00000a  6011              STR      r1,[r2,#0]
00000c  e010              B        |L3.48|
                  |L3.14|
;;;130    	}
;;;131    	else if (_no == 1)
00000e  2801              CMP      r0,#1
000010  d103              BNE      |L3.26|
;;;132    	{
;;;133    		GPIO_PORT_LED2->BSRR = GPIO_PIN_LED2;
000012  2120              MOVS     r1,#0x20
000014  4a07              LDR      r2,|L3.52|
000016  6011              STR      r1,[r2,#0]
000018  e00a              B        |L3.48|
                  |L3.26|
;;;134    	}
;;;135    	else if (_no == 2)
00001a  2802              CMP      r0,#2
00001c  d103              BNE      |L3.38|
;;;136    	{
;;;137    		GPIO_PORT_LED3->BSRR = GPIO_PIN_LED3;
00001e  2120              MOVS     r1,#0x20
000020  4a04              LDR      r2,|L3.52|
000022  6011              STR      r1,[r2,#0]
000024  e004              B        |L3.48|
                  |L3.38|
;;;138    	}
;;;139    	else if (_no == 3)
000026  2803              CMP      r0,#3
000028  d102              BNE      |L3.48|
;;;140    	{
;;;141    		GPIO_PORT_LED4->BSRR = GPIO_PIN_LED4;
00002a  2120              MOVS     r1,#0x20
00002c  4a01              LDR      r2,|L3.52|
00002e  6011              STR      r1,[r2,#0]
                  |L3.48|
;;;142    	}
;;;143    }
000030  4770              BX       lr
;;;144    
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0x40010810

                          AREA ||i.bsp_LedOn||, CODE, READONLY, ALIGN=2

                  bsp_LedOn PROC
;;;92     */
;;;93     void bsp_LedOn(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;94     {
;;;95     	_no--;
000002  b2c8              UXTB     r0,r1
;;;96     
;;;97     	if (_no == 0)
000004  b918              CBNZ     r0,|L4.14|
;;;98     	{
;;;99     		GPIO_PORT_LED1->BRR = GPIO_PIN_LED1;
000006  2120              MOVS     r1,#0x20
000008  4a0a              LDR      r2,|L4.52|
00000a  6011              STR      r1,[r2,#0]
00000c  e010              B        |L4.48|
                  |L4.14|
;;;100    	}
;;;101    	else if (_no == 1)
00000e  2801              CMP      r0,#1
000010  d103              BNE      |L4.26|
;;;102    	{
;;;103    		GPIO_PORT_LED2->BRR = GPIO_PIN_LED2;
000012  2120              MOVS     r1,#0x20
000014  4a07              LDR      r2,|L4.52|
000016  6011              STR      r1,[r2,#0]
000018  e00a              B        |L4.48|
                  |L4.26|
;;;104    	}
;;;105    	else if (_no == 2)
00001a  2802              CMP      r0,#2
00001c  d103              BNE      |L4.38|
;;;106    	{
;;;107    		GPIO_PORT_LED3->BRR = GPIO_PIN_LED3;
00001e  2120              MOVS     r1,#0x20
000020  4a04              LDR      r2,|L4.52|
000022  6011              STR      r1,[r2,#0]
000024  e004              B        |L4.48|
                  |L4.38|
;;;108    	}
;;;109    	else if (_no == 3)
000026  2803              CMP      r0,#3
000028  d102              BNE      |L4.48|
;;;110    	{
;;;111    		GPIO_PORT_LED4->BRR = GPIO_PIN_LED4;
00002a  2120              MOVS     r1,#0x20
00002c  4a01              LDR      r2,|L4.52|
00002e  6011              STR      r1,[r2,#0]
                  |L4.48|
;;;112    	}
;;;113    }
000030  4770              BX       lr
;;;114    
                          ENDP

000032  0000              DCW      0x0000
                  |L4.52|
                          DCD      0x40010814

                          AREA ||i.bsp_LedToggle||, CODE, READONLY, ALIGN=2

                  bsp_LedToggle PROC
;;;152    */
;;;153    void bsp_LedToggle(uint8_t _no)
000000  2801              CMP      r0,#1
;;;154    {
;;;155    	if (_no == 1)
000002  d106              BNE      |L5.18|
;;;156    	{
;;;157    		GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;
000004  4910              LDR      r1,|L5.72|
000006  6809              LDR      r1,[r1,#0]
000008  f0810120          EOR      r1,r1,#0x20
00000c  4a0e              LDR      r2,|L5.72|
00000e  6011              STR      r1,[r2,#0]
000010  e019              B        |L5.70|
                  |L5.18|
;;;158    	}
;;;159    	else if (_no == 2)
000012  2802              CMP      r0,#2
000014  d106              BNE      |L5.36|
;;;160    	{
;;;161    		GPIO_PORT_LED2->ODR ^= GPIO_PIN_LED2;
000016  490c              LDR      r1,|L5.72|
000018  6809              LDR      r1,[r1,#0]
00001a  f0810120          EOR      r1,r1,#0x20
00001e  4a0a              LDR      r2,|L5.72|
000020  6011              STR      r1,[r2,#0]
000022  e010              B        |L5.70|
                  |L5.36|
;;;162    	}
;;;163    	else if (_no == 3)
000024  2803              CMP      r0,#3
000026  d106              BNE      |L5.54|
;;;164    	{
;;;165    		GPIO_PORT_LED3->ODR ^= GPIO_PIN_LED3;
000028  4907              LDR      r1,|L5.72|
00002a  6809              LDR      r1,[r1,#0]
00002c  f0810120          EOR      r1,r1,#0x20
000030  4a05              LDR      r2,|L5.72|
000032  6011              STR      r1,[r2,#0]
000034  e007              B        |L5.70|
                  |L5.54|
;;;166    	}
;;;167    	else if (_no == 4)
000036  2804              CMP      r0,#4
000038  d105              BNE      |L5.70|
;;;168    	{
;;;169    		GPIO_PORT_LED4->ODR ^= GPIO_PIN_LED4;
00003a  4903              LDR      r1,|L5.72|
00003c  6809              LDR      r1,[r1,#0]
00003e  f0810120          EOR      r1,r1,#0x20
000042  4a01              LDR      r2,|L5.72|
000044  6011              STR      r1,[r2,#0]
                  |L5.70|
;;;170    	}
;;;171    }
000046  4770              BX       lr
;;;172    
                          ENDP

                  |L5.72|
                          DCD      0x4001080c

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 128
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
