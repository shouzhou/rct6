; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\func.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\func.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\User -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User\app\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\func.crf ..\..\User\app\src\func.c]
                          THUMB

                          AREA ||i.FunFanClose||, CODE, READONLY, ALIGN=1

                  FunFanClose PROC
;;;118    }
;;;119    void FunFanClose(void)
000000  b510              PUSH     {r4,lr}
;;;120    {
;;;121        bsp_IOOn(5);
000002  2005              MOVS     r0,#5
000004  f7fffffe          BL       bsp_IOOn
;;;122    }
000008  bd10              POP      {r4,pc}
;;;123    // onnum 置高IO的个数
                          ENDP


                          AREA ||i.FunFanOpen||, CODE, READONLY, ALIGN=1

                  FunFanOpen PROC
;;;114    }
;;;115    void FunFanOpen(void)
000000  b510              PUSH     {r4,lr}
;;;116    {
;;;117        bsp_IOOff(5);
000002  2005              MOVS     r0,#5
000004  f7fffffe          BL       bsp_IOOff
;;;118    }
000008  bd10              POP      {r4,pc}
;;;119    void FunFanClose(void)
                          ENDP


                          AREA ||i.FunO3CalParameter||, CODE, READONLY, ALIGN=2

                  FunO3CalParameter PROC
;;;12     extern uint8_t  SADDR485;
;;;13     float FunO3CalParameter(void)
000000  b570              PUSH     {r4-r6,lr}
;;;14     {
;;;15         float kh = 1.0;
000002  f04f547e          MOV      r4,#0x3f800000
;;;16         float kt = 1.0;
000006  4625              MOV      r5,r4
;;;17         ////湿度参数计算
;;;18         if(g_DHT11.Hum>=HLEVEL1)
000008  4846              LDR      r0,|L3.292|
00000a  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00000c  f24031b6          MOV      r1,#0x3b6
000010  4288              CMP      r0,r1
000012  db01              BLT      |L3.24|
;;;19         {
;;;20             kh = KHL1;
000014  4c44              LDR      r4,|L3.296|
000016  e038              B        |L3.138|
                  |L3.24|
;;;21         }
;;;22         else if(g_DHT11.Hum>=HLEVEL2)
000018  4842              LDR      r0,|L3.292|
00001a  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00001c  f2403152          MOV      r1,#0x352
000020  4288              CMP      r0,r1
000022  db01              BLT      |L3.40|
;;;23         {
;;;24             kh = KHL2;
000024  4c41              LDR      r4,|L3.300|
000026  e030              B        |L3.138|
                  |L3.40|
;;;25         }
;;;26         else if(g_DHT11.Hum>=HLEVEL3)
000028  483e              LDR      r0,|L3.292|
00002a  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00002c  f5b07f48          CMP      r0,#0x320
000030  db01              BLT      |L3.54|
;;;27         {
;;;28             kh = KHL3;
000032  4c3f              LDR      r4,|L3.304|
000034  e029              B        |L3.138|
                  |L3.54|
;;;29         }
;;;30         else if(g_DHT11.Hum>=HLEVEL4)
000036  483b              LDR      r0,|L3.292|
000038  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00003a  f24021ee          MOV      r1,#0x2ee
00003e  4288              CMP      r0,r1
000040  db02              BLT      |L3.72|
;;;31         {
;;;32             kh = KHL4;
000042  f04f547c          MOV      r4,#0x3f000000
000046  e020              B        |L3.138|
                  |L3.72|
;;;33         }
;;;34         else if(g_DHT11.Hum>=HLEVEL5)
000048  4836              LDR      r0,|L3.292|
00004a  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00004c  f240218a          MOV      r1,#0x28a
000050  4288              CMP      r0,r1
000052  db01              BLT      |L3.88|
;;;35         {
;;;36             kh = KHL5;
000054  4c37              LDR      r4,|L3.308|
000056  e018              B        |L3.138|
                  |L3.88|
;;;37         }
;;;38         else if(g_DHT11.Hum>=HLEVEL6)
000058  4832              LDR      r0,|L3.292|
00005a  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00005c  f5b07f16          CMP      r0,#0x258
000060  db01              BLT      |L3.102|
;;;39         {
;;;40             kh = KHL6;
000062  4c35              LDR      r4,|L3.312|
000064  e011              B        |L3.138|
                  |L3.102|
;;;41         }
;;;42         else if(g_DHT11.Hum>=HLEVEL7)
000066  482f              LDR      r0,|L3.292|
000068  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00006a  f2402126          MOV      r1,#0x226
00006e  4288              CMP      r0,r1
000070  db01              BLT      |L3.118|
;;;43         {
;;;44             kh = KHL7;
000072  4c32              LDR      r4,|L3.316|
000074  e009              B        |L3.138|
                  |L3.118|
;;;45         }
;;;46         else if(g_DHT11.Hum>=HLEVEL8)
000076  482b              LDR      r0,|L3.292|
000078  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00007a  f5b07ffa          CMP      r0,#0x1f4
00007e  db02              BLT      |L3.134|
;;;47         {
;;;48             kh = KHL8;
000080  f04f547e          MOV      r4,#0x3f800000
000084  e001              B        |L3.138|
                  |L3.134|
;;;49         }
;;;50         else
;;;51         {
;;;52             kh = KHOTHER;
000086  f04f547e          MOV      r4,#0x3f800000
                  |L3.138|
;;;53         }
;;;54         
;;;55         ////温度参数 计算
;;;56         if(g_DHT11.Temp>=TLEVEL1)
00008a  4826              LDR      r0,|L3.292|
00008c  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
00008e  f2402126          MOV      r1,#0x226
000092  4288              CMP      r0,r1
000094  db01              BLT      |L3.154|
;;;57         {
;;;58             kt = KTL1;
000096  4d28              LDR      r5,|L3.312|
000098  e03e              B        |L3.280|
                  |L3.154|
;;;59         }
;;;60         else if(g_DHT11.Temp>=TLEVEL2)
00009a  4822              LDR      r0,|L3.292|
00009c  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
00009e  f5b07ffa          CMP      r0,#0x1f4
0000a2  db01              BLT      |L3.168|
;;;61         {
;;;62             kt = KTL2;
0000a4  4d24              LDR      r5,|L3.312|
0000a6  e037              B        |L3.280|
                  |L3.168|
;;;63         }
;;;64         else if(g_DHT11.Temp>=TLEVEL3)
0000a8  481e              LDR      r0,|L3.292|
0000aa  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
0000ac  f5b07fe1          CMP      r0,#0x1c2
0000b0  db01              BLT      |L3.182|
;;;65         {
;;;66             kt = KTL3;
0000b2  4d21              LDR      r5,|L3.312|
0000b4  e030              B        |L3.280|
                  |L3.182|
;;;67         }
;;;68         else if(g_DHT11.Temp>=TLEVEL4)
0000b6  481b              LDR      r0,|L3.292|
0000b8  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
0000ba  f5b07fc8          CMP      r0,#0x190
0000be  db01              BLT      |L3.196|
;;;69         {
;;;70             kt = KTL4;
0000c0  4d1d              LDR      r5,|L3.312|
0000c2  e029              B        |L3.280|
                  |L3.196|
;;;71         }
;;;72         else if(g_DHT11.Temp>=TLEVEL5)//40
0000c4  4817              LDR      r0,|L3.292|
0000c6  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
0000c8  f5b07faf          CMP      r0,#0x15e
0000cc  db01              BLT      |L3.210|
;;;73         {
;;;74             kt = KTL5;
0000ce  4d1a              LDR      r5,|L3.312|
0000d0  e022              B        |L3.280|
                  |L3.210|
;;;75         }
;;;76         else if(g_DHT11.Temp>=TLEVEL6)//30
0000d2  4814              LDR      r0,|L3.292|
0000d4  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
0000d6  f5b07f96          CMP      r0,#0x12c
0000da  db01              BLT      |L3.224|
;;;77         {
;;;78             kt = KTL6;
0000dc  4d16              LDR      r5,|L3.312|
0000de  e01b              B        |L3.280|
                  |L3.224|
;;;79         }
;;;80         else if(g_DHT11.Temp>=TLEVEL7)//25
0000e0  4810              LDR      r0,|L3.292|
0000e2  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
0000e4  28fa              CMP      r0,#0xfa
0000e6  db01              BLT      |L3.236|
;;;81         {
;;;82             kt = KTL7;
0000e8  4d13              LDR      r5,|L3.312|
0000ea  e015              B        |L3.280|
                  |L3.236|
;;;83         }
;;;84         else if(g_DHT11.Temp>=TLEVEL8)//20
0000ec  480d              LDR      r0,|L3.292|
0000ee  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
0000f0  28c8              CMP      r0,#0xc8
0000f2  db01              BLT      |L3.248|
;;;85         {
;;;86             kt = KTL8;
0000f4  4d12              LDR      r5,|L3.320|
0000f6  e00f              B        |L3.280|
                  |L3.248|
;;;87         }
;;;88         else if(g_DHT11.Temp>=TLEVEL9)//10
0000f8  480a              LDR      r0,|L3.292|
0000fa  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
0000fc  2864              CMP      r0,#0x64
0000fe  db02              BLT      |L3.262|
;;;89         {
;;;90             kt = KTL9;
000100  f04f557e          MOV      r5,#0x3f800000
000104  e008              B        |L3.280|
                  |L3.262|
;;;91         }
;;;92         else if(g_DHT11.Temp>=TLEVEL10)//5
000106  4807              LDR      r0,|L3.292|
000108  88c0              LDRH     r0,[r0,#6]  ; g_DHT11
00010a  2832              CMP      r0,#0x32
00010c  db02              BLT      |L3.276|
;;;93         {
;;;94             kt = KTL10;
00010e  f04f557e          MOV      r5,#0x3f800000
000112  e001              B        |L3.280|
                  |L3.276|
;;;95         }
;;;96         else
;;;97         {
;;;98             kt = KTOTHER;
000114  f04f557e          MOV      r5,#0x3f800000
                  |L3.280|
;;;99         }
;;;100        
;;;101        if(g_chemical)
;;;102        {
;;;103            
;;;104        }
;;;105        else
;;;106        {
;;;107            
;;;108        }
;;;109        if(g_plant)
;;;110        {
;;;111            
;;;112        }
;;;113        return kh*kt;
000118  4629              MOV      r1,r5
00011a  4620              MOV      r0,r4
00011c  f7fffffe          BL       __aeabi_fmul
;;;114    }
000120  bd70              POP      {r4-r6,pc}
;;;115    void FunFanOpen(void)
                          ENDP

000122  0000              DCW      0x0000
                  |L3.292|
                          DCD      g_DHT11
                  |L3.296|
                          DCD      0x3e99999a
                  |L3.300|
                          DCD      0x3eb33333
                  |L3.304|
                          DCD      0x3ecccccd
                  |L3.308|
                          DCD      0x3f19999a
                  |L3.312|
                          DCD      0x3f4ccccd
                  |L3.316|
                          DCD      0x3f666666
                  |L3.320|
                          DCD      0x3f7ae148

                          AREA ||i.FunO3Control||, CODE, READONLY, ALIGN=1

                  FunO3Control PROC
;;;125    // 
;;;126    void FunO3Control(uint8_t onnum,uint8_t index)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;127    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
;;;128        uint8_t offnum = 4-onnum; //关闭个数
000008  f1c60004          RSB      r0,r6,#4
00000c  f00008ff          AND      r8,r0,#0xff
;;;129        uint8_t i,j;
;;;130        for(i=index;i<onnum+index;i++) //开启部分
000010  463c              MOV      r4,r7
000012  e00b              B        |L4.44|
                  |L4.20|
;;;131        {
;;;132            if(i>4)
000014  2c04              CMP      r4,#4
000016  dd04              BLE      |L4.34|
;;;133                bsp_IOOff(i-4);
000018  1f21              SUBS     r1,r4,#4
00001a  b2c8              UXTB     r0,r1
00001c  f7fffffe          BL       bsp_IOOff
000020  e002              B        |L4.40|
                  |L4.34|
;;;134            else
;;;135                bsp_IOOff(i);
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       bsp_IOOff
                  |L4.40|
000028  1c60              ADDS     r0,r4,#1              ;130
00002a  b2c4              UXTB     r4,r0                 ;130
                  |L4.44|
00002c  19f0              ADDS     r0,r6,r7              ;130
00002e  42a0              CMP      r0,r4                 ;130
000030  dcf0              BGT      |L4.20|
;;;136        }
;;;137        for(j=i;j<offnum+i;j++)
000032  4625              MOV      r5,r4
000034  e00b              B        |L4.78|
                  |L4.54|
;;;138        {
;;;139            if(j>4)
000036  2d04              CMP      r5,#4
000038  dd04              BLE      |L4.68|
;;;140                bsp_IOOn(j-4);
00003a  1f29              SUBS     r1,r5,#4
00003c  b2c8              UXTB     r0,r1
00003e  f7fffffe          BL       bsp_IOOn
000042  e002              B        |L4.74|
                  |L4.68|
;;;141            else
;;;142                bsp_IOOn(j);
000044  4628              MOV      r0,r5
000046  f7fffffe          BL       bsp_IOOn
                  |L4.74|
00004a  1c68              ADDS     r0,r5,#1              ;137
00004c  b2c5              UXTB     r5,r0                 ;137
                  |L4.78|
00004e  eb080004          ADD      r0,r8,r4              ;137
000052  42a8              CMP      r0,r5                 ;137
000054  dcef              BGT      |L4.54|
;;;143        }
;;;144       
;;;145    }
000056  e8bd81f0          POP      {r4-r8,pc}
;;;146    
                          ENDP


                          AREA ||i.FunSwitch||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_widthprec
                  FunSwitch PROC
;;;146    
;;;147    void FunSwitch(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;148    {
000004  b08b              SUB      sp,sp,#0x2c
;;;149        #ifdef USEDEBUG
;;;150        if(g_status != 26)
000006  48fc              LDR      r0,|L5.1016|
000008  7800              LDRB     r0,[r0,#0]  ; g_status
00000a  281a              CMP      r0,#0x1a
00000c  d006              BEQ      |L5.28|
;;;151        printf("current status = %d  SLAVE NUM = %d\r\n",g_status,SADDR485);
00000e  48fb              LDR      r0,|L5.1020|
000010  7802              LDRB     r2,[r0,#0]  ; SADDR485
000012  48f9              LDR      r0,|L5.1016|
000014  7801              LDRB     r1,[r0,#0]  ; g_status
000016  a0fa              ADR      r0,|L5.1024|
000018  f7fffffe          BL       __2printf
                  |L5.28|
;;;152        
;;;153        
;;;154        #endif
;;;155        if((g_status>10)&&(g_status<STATUS_AUTOV_WAIT))
00001c  48f6              LDR      r0,|L5.1016|
00001e  7800              LDRB     r0,[r0,#0]  ; g_status
000020  280a              CMP      r0,#0xa
000022  dd08              BLE      |L5.54|
000024  48f4              LDR      r0,|L5.1016|
000026  7800              LDRB     r0,[r0,#0]  ; g_status
000028  281f              CMP      r0,#0x1f
00002a  da04              BGE      |L5.54|
;;;156            g_sysruntime ++;
00002c  48fe              LDR      r0,|L5.1064|
00002e  6800              LDR      r0,[r0,#0]  ; g_sysruntime
000030  1c40              ADDS     r0,r0,#1
000032  49fd              LDR      r1,|L5.1064|
000034  6008              STR      r0,[r1,#0]  ; g_sysruntime
                  |L5.54|
;;;157           if(g_status >0)
000036  48f0              LDR      r0,|L5.1016|
000038  7800              LDRB     r0,[r0,#0]  ; g_status
00003a  2800              CMP      r0,#0
00003c  dd0f              BLE      |L5.94|
;;;158           {
;;;159               if(g_tVar.P21 == 0xA55A) //发送关机命令
00003e  48fb              LDR      r0,|L5.1068|
000040  8d00              LDRH     r0,[r0,#0x28]  ; g_tVar
000042  f24a515a          MOV      r1,#0xa55a
000046  4288              CMP      r0,r1
000048  d109              BNE      |L5.94|
;;;160               {
;;;161                        FunO3Control(0,1);
00004a  2101              MOVS     r1,#1
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       FunO3Control
;;;162                        g_status = STATUS_ALL_STOP;
000052  2000              MOVS     r0,#0
000054  49e8              LDR      r1,|L5.1016|
000056  7008              STRB     r0,[r1,#0]
;;;163                        printf("system all stop!\r\n");
000058  a0f5              ADR      r0,|L5.1072|
00005a  f7fffffe          BL       __2printf
                  |L5.94|
;;;164               }
;;;165           }
;;;166            switch(g_status)
00005e  48e6              LDR      r0,|L5.1016|
000060  7800              LDRB     r0,[r0,#0]  ; g_status
000062  2821              CMP      r0,#0x21
000064  d277              BCS      |L5.342|
000066  e8dff000          TBB      [pc,r0]
00006a  1176              DCB      0x11,0x76
00006c  76767676          DCB      0x76,0x76,0x76,0x76
000070  76767676          DCB      0x76,0x76,0x76,0x76
000074  37415365          DCB      0x37,0x41,0x53,0x65
000078  a4b4c4d4          DCB      0xa4,0xb4,0xc4,0xd4
00007c  f0ee76ed          DCB      0xf0,0xee,0x76,0xed
000080  76ecebea          DCB      0x76,0xec,0xeb,0xea
000084  76e9e8e7          DCB      0x76,0xe9,0xe8,0xe7
000088  e6e5e400          DCB      0xe6,0xe5,0xe4,0x00
;;;167            {
;;;168                    case STATUS_ALL_STOP :
;;;169                      //确保所有模块都是关闭的
;;;170                    FunO3Control(0,1);
00008c  2101              MOVS     r1,#1
00008e  2000              MOVS     r0,#0
000090  f7fffffe          BL       FunO3Control
;;;171                    FunFanClose();
000094  f7fffffe          BL       FunFanClose
;;;172                    if(g_tVar.P21 == 0X5AA5 )  //表示开机
000098  48e4              LDR      r0,|L5.1068|
00009a  8d00              LDRH     r0,[r0,#0x28]  ; g_tVar
00009c  f64521a5          MOV      r1,#0x5aa5
0000a0  4288              CMP      r0,r1
0000a2  d118              BNE      |L5.214|
;;;173                    {
;;;174                       
;;;175                        g_status = STATUS_AUTOV_START;
0000a4  200a              MOVS     r0,#0xa
0000a6  49d4              LDR      r1,|L5.1016|
0000a8  7008              STRB     r0,[r1,#0]
;;;176                        printf("system all start! mode  = %d,L=%d,W=%d,H=%d\r\n",g_tVar.P22, g_tVar.P23,g_tVar.P24,g_tVar.P25);
0000aa  48e0              LDR      r0,|L5.1068|
0000ac  8e00              LDRH     r0,[r0,#0x30]  ; g_tVar
0000ae  9000              STR      r0,[sp,#0]
0000b0  48de              LDR      r0,|L5.1068|
0000b2  8dc3              LDRH     r3,[r0,#0x2e]  ; g_tVar
0000b4  8d82              LDRH     r2,[r0,#0x2c]  ; g_tVar
0000b6  8d41              LDRH     r1,[r0,#0x2a]  ; g_tVar
0000b8  a0e2              ADR      r0,|L5.1092|
0000ba  f7fffffe          BL       __2printf
;;;177                        g_lenth     =   g_tVar.P23;
0000be  48db              LDR      r0,|L5.1068|
0000c0  8d80              LDRH     r0,[r0,#0x2c]  ; g_tVar
0000c2  49ec              LDR      r1,|L5.1140|
0000c4  8008              STRH     r0,[r1,#0]
;;;178                        g_width     =   g_tVar.P24;
0000c6  48d9              LDR      r0,|L5.1068|
0000c8  8dc0              LDRH     r0,[r0,#0x2e]  ; g_tVar
0000ca  49eb              LDR      r1,|L5.1144|
0000cc  8008              STRH     r0,[r1,#0]
;;;179                        g_height    =   g_tVar.P25;
0000ce  48d7              LDR      r0,|L5.1068|
0000d0  8e00              LDRH     r0,[r0,#0x30]  ; g_tVar
0000d2  49ea              LDR      r1,|L5.1148|
0000d4  8008              STRH     r0,[r1,#0]
                  |L5.214|
;;;180                    }
;;;181                       
;;;182                      break;
0000d6  e335              B        |L5.1860|
;;;183    //                case STATUS_NETINIEND: //网络初始化完成，等待按键实现启动
;;;184    //                    FunO3Control(0,1);
;;;185    //                    FunFanClose();
;;;186    //                    // 根据选择进入对应的不同模式
;;;187    //                 if(g_funcKey == STARTAUTOV) //自动体积模式
;;;188    //                   {
;;;189    //                      g_status = STATUS_AUTOV_START; //进入自动体积模式
;;;190    //                   }
;;;191    //                    break;
;;;192                       
;;;193                    case STATUS_AUTOV_START:
;;;194                        FunO3Control(0,1);//1-4关
0000d8  2101              MOVS     r1,#1
0000da  2000              MOVS     r0,#0
0000dc  f7fffffe          BL       FunO3Control
;;;195                        FunFanOpen(); //风扇开
0000e0  f7fffffe          BL       FunFanOpen
;;;196                        g_status = STATUS_CHECK_F1_1;
0000e4  200b              MOVS     r0,#0xb
0000e6  49c4              LDR      r1,|L5.1016|
0000e8  7008              STRB     r0,[r1,#0]
;;;197                      //  g_touch = 11;  //更新显示屏  开始运行
;;;198                       // TIM_Cmd(TIM6,DISABLE ); //关闭触摸和按键功能
;;;199                        break;
0000ea  e32b              B        |L5.1860|
;;;200                    case STATUS_CHECK_F1_1://2分钟 固定时间 不修改了
;;;201                        g_timerun++;
0000ec  48e4              LDR      r0,|L5.1152|
0000ee  8800              LDRH     r0,[r0,#0]  ; g_timerun
0000f0  1c40              ADDS     r0,r0,#1
0000f2  49e3              LDR      r1,|L5.1152|
0000f4  8008              STRH     r0,[r1,#0]
;;;202                        if(g_timerun>120)
0000f6  4608              MOV      r0,r1
0000f8  8800              LDRH     r0,[r0,#0]  ; g_timerun
0000fa  2878              CMP      r0,#0x78
0000fc  dd07              BLE      |L5.270|
;;;203                        {
;;;204                            g_status = STATUS_CHECK_F1_2;
0000fe  200c              MOVS     r0,#0xc
000100  49bd              LDR      r1,|L5.1016|
000102  7008              STRB     r0,[r1,#0]
;;;205                            g_timerun = 0;
000104  2000              MOVS     r0,#0
000106  49de              LDR      r1,|L5.1152|
000108  8008              STRH     r0,[r1,#0]
;;;206                            FunFanClose();
00010a  f7fffffe          BL       FunFanClose
                  |L5.270|
;;;207                        }
;;;208                        break;
00010e  e319              B        |L5.1860|
;;;209                        case STATUS_CHECK_F1_2://按开机后待机的时间
;;;210                        g_timerun++;
000110  48db              LDR      r0,|L5.1152|
000112  8800              LDRH     r0,[r0,#0]  ; g_timerun
000114  1c40              ADDS     r0,r0,#1
000116  49da              LDR      r1,|L5.1152|
000118  8008              STRH     r0,[r1,#0]
;;;211                        if(g_timerun>CHECKSTARTTIME) //半小时 自己修改时间  
00011a  4608              MOV      r0,r1
00011c  8800              LDRH     r0,[r0,#0]  ; g_timerun
00011e  280a              CMP      r0,#0xa
000120  dd07              BLE      |L5.306|
;;;212                        {
;;;213                            g_status = STATUS_CHECK_F2;
000122  200d              MOVS     r0,#0xd
000124  49b4              LDR      r1,|L5.1016|
000126  7008              STRB     r0,[r1,#0]
;;;214                            g_timerun = 0;
000128  2000              MOVS     r0,#0
00012a  49d5              LDR      r1,|L5.1152|
00012c  8008              STRH     r0,[r1,#0]
;;;215                            FunFanOpen();
00012e  f7fffffe          BL       FunFanOpen
                  |L5.306|
;;;216                        }
;;;217                        break;
000132  e307              B        |L5.1860|
;;;218                    case STATUS_CHECK_F2:
;;;219                        DHT11_ReadData(&g_DHT11);
000134  48d3              LDR      r0,|L5.1156|
000136  f7fffffe          BL       DHT11_ReadData
;;;220                        if(g_DHT11.Hum>=CHECKL1HUM) //>=85%
00013a  48d2              LDR      r0,|L5.1156|
00013c  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00013e  f2403152          MOV      r1,#0x352
000142  4288              CMP      r0,r1
000144  db08              BLT      |L5.344|
;;;221                        {
;;;222                            FunO3Control(4,1);//1-4开
000146  2101              MOVS     r1,#1
000148  2004              MOVS     r0,#4
00014a  f7fffffe          BL       FunO3Control
;;;223                           // FunFanClose(); //风扇关
;;;224                            g_status = STATUS_CHECK_F3_L1; 
00014e  200e              MOVS     r0,#0xe
000150  49a9              LDR      r1,|L5.1016|
000152  7008              STRB     r0,[r1,#0]
000154  e02c              B        |L5.432|
                  |L5.342|
000156  e2f4              B        |L5.1858|
                  |L5.344|
;;;225                        }
;;;226                        else if(g_DHT11.Hum>CHECKL2HUM)//>=65% <=85%
000158  48ca              LDR      r0,|L5.1156|
00015a  8900              LDRH     r0,[r0,#8]  ; g_DHT11
00015c  f240218a          MOV      r1,#0x28a
000160  4288              CMP      r0,r1
000162  dd07              BLE      |L5.372|
;;;227                        {
;;;228                            FunO3Control(4,1);//1-4开
000164  2101              MOVS     r1,#1
000166  2004              MOVS     r0,#4
000168  f7fffffe          BL       FunO3Control
;;;229                           // FunFanClose(); //风扇关
;;;230                            g_status = STATUS_CHECK_F3_L2; 
00016c  200f              MOVS     r0,#0xf
00016e  49a2              LDR      r1,|L5.1016|
000170  7008              STRB     r0,[r1,#0]
000172  e01d              B        |L5.432|
                  |L5.372|
;;;231                        }
;;;232                        else if(g_DHT11.Hum>CHECKL3HUM)//>=55% <= 65%
000174  48c3              LDR      r0,|L5.1156|
000176  8900              LDRH     r0,[r0,#8]  ; g_DHT11
000178  f2402126          MOV      r1,#0x226
00017c  4288              CMP      r0,r1
00017e  dd07              BLE      |L5.400|
;;;233                        {
;;;234                            FunO3Control(4,1);//1-4开
000180  2101              MOVS     r1,#1
000182  2004              MOVS     r0,#4
000184  f7fffffe          BL       FunO3Control
;;;235                           // FunFanClose(); //风扇关
;;;236                            g_status = STATUS_CHECK_F3_L3; 
000188  2010              MOVS     r0,#0x10
00018a  499b              LDR      r1,|L5.1016|
00018c  7008              STRB     r0,[r1,#0]
00018e  e00f              B        |L5.432|
                  |L5.400|
;;;237                        }
;;;238                        else if(g_DHT11.Hum>=CHECKL4HUM) //>=50% <= 55%
000190  48bc              LDR      r0,|L5.1156|
000192  8900              LDRH     r0,[r0,#8]  ; g_DHT11
000194  f5b07ffa          CMP      r0,#0x1f4
000198  db07              BLT      |L5.426|
;;;239                        {
;;;240                            FunO3Control(4,1);//1-4开
00019a  2101              MOVS     r1,#1
00019c  2004              MOVS     r0,#4
00019e  f7fffffe          BL       FunO3Control
;;;241                           // FunFanClose(); //风扇关
;;;242                            g_status = STATUS_CHECK_F3_L4;
0001a2  2011              MOVS     r0,#0x11
0001a4  4994              LDR      r1,|L5.1016|
0001a6  7008              STRB     r0,[r1,#0]
0001a8  e002              B        |L5.432|
                  |L5.426|
;;;243                        }
;;;244                        else // <50%  -报警 停止运行
;;;245                        {
;;;246                            g_status = STATUS_CHECK_F3_L5;
0001aa  2012              MOVS     r0,#0x12
0001ac  4992              LDR      r1,|L5.1016|
0001ae  7008              STRB     r0,[r1,#0]
                  |L5.432|
;;;247                        }
;;;248                        break;
0001b0  e2c8              B        |L5.1860|
;;;249                    case STATUS_CHECK_F3_L1://最高湿度延时
;;;250                        g_timerun++;
0001b2  48b3              LDR      r0,|L5.1152|
0001b4  8800              LDRH     r0,[r0,#0]  ; g_timerun
0001b6  1c40              ADDS     r0,r0,#1
0001b8  49b1              LDR      r1,|L5.1152|
0001ba  8008              STRH     r0,[r1,#0]
;;;251                        if(g_timerun>CHECKL1TIME)
0001bc  4608              MOV      r0,r1
0001be  8800              LDRH     r0,[r0,#0]  ; g_timerun
0001c0  280a              CMP      r0,#0xa
0001c2  dd05              BLE      |L5.464|
;;;252                        {
;;;253                            g_status = STATUS_CHECK_F4;
0001c4  2013              MOVS     r0,#0x13
0001c6  498c              LDR      r1,|L5.1016|
0001c8  7008              STRB     r0,[r1,#0]
;;;254                            g_timerun = 0;
0001ca  2000              MOVS     r0,#0
0001cc  49ac              LDR      r1,|L5.1152|
0001ce  8008              STRH     r0,[r1,#0]
                  |L5.464|
;;;255                        }
;;;256                    
;;;257                        break;
0001d0  e2b8              B        |L5.1860|
;;;258                    case STATUS_CHECK_F3_L2://次高湿度延时
;;;259                        g_timerun++;
0001d2  48ab              LDR      r0,|L5.1152|
0001d4  8800              LDRH     r0,[r0,#0]  ; g_timerun
0001d6  1c40              ADDS     r0,r0,#1
0001d8  49a9              LDR      r1,|L5.1152|
0001da  8008              STRH     r0,[r1,#0]
;;;260                        if(g_timerun>CHECKL2TIME)
0001dc  4608              MOV      r0,r1
0001de  8800              LDRH     r0,[r0,#0]  ; g_timerun
0001e0  280a              CMP      r0,#0xa
0001e2  dd05              BLE      |L5.496|
;;;261                        {
;;;262                            g_status = STATUS_CHECK_F4;
0001e4  2013              MOVS     r0,#0x13
0001e6  4984              LDR      r1,|L5.1016|
0001e8  7008              STRB     r0,[r1,#0]
;;;263                            g_timerun = 0;
0001ea  2000              MOVS     r0,#0
0001ec  49a4              LDR      r1,|L5.1152|
0001ee  8008              STRH     r0,[r1,#0]
                  |L5.496|
;;;264                        }
;;;265                        break;
0001f0  e2a8              B        |L5.1860|
;;;266                    case STATUS_CHECK_F3_L3://第三湿度延时
;;;267                        g_timerun++;
0001f2  48a3              LDR      r0,|L5.1152|
0001f4  8800              LDRH     r0,[r0,#0]  ; g_timerun
0001f6  1c40              ADDS     r0,r0,#1
0001f8  49a1              LDR      r1,|L5.1152|
0001fa  8008              STRH     r0,[r1,#0]
;;;268                        if(g_timerun>CHECKL3TIME)
0001fc  4608              MOV      r0,r1
0001fe  8800              LDRH     r0,[r0,#0]  ; g_timerun
000200  280a              CMP      r0,#0xa
000202  dd05              BLE      |L5.528|
;;;269                        {
;;;270                            g_status = STATUS_CHECK_F4;
000204  2013              MOVS     r0,#0x13
000206  497c              LDR      r1,|L5.1016|
000208  7008              STRB     r0,[r1,#0]
;;;271                            g_timerun = 0;
00020a  2000              MOVS     r0,#0
00020c  499c              LDR      r1,|L5.1152|
00020e  8008              STRH     r0,[r1,#0]
                  |L5.528|
;;;272                        }
;;;273                        break;
000210  e298              B        |L5.1860|
;;;274                    case STATUS_CHECK_F3_L4://第四湿度延时
;;;275                        g_timerun++;
000212  489b              LDR      r0,|L5.1152|
000214  8800              LDRH     r0,[r0,#0]  ; g_timerun
000216  1c40              ADDS     r0,r0,#1
000218  4999              LDR      r1,|L5.1152|
00021a  8008              STRH     r0,[r1,#0]
;;;276                        if(g_timerun>CHECKL4TIME)
00021c  4608              MOV      r0,r1
00021e  8800              LDRH     r0,[r0,#0]  ; g_timerun
000220  2803              CMP      r0,#3
000222  dd05              BLE      |L5.560|
;;;277                        {
;;;278                            g_status = STATUS_CHECK_F4;
000224  2013              MOVS     r0,#0x13
000226  4974              LDR      r1,|L5.1016|
000228  7008              STRB     r0,[r1,#0]
;;;279                            g_timerun = 0;
00022a  2000              MOVS     r0,#0
00022c  4994              LDR      r1,|L5.1152|
00022e  8008              STRH     r0,[r1,#0]
                  |L5.560|
;;;280                        }
;;;281                        break;
000230  e288              B        |L5.1860|
000232  e280              B        |L5.1846|
000234  e270              B        |L5.1816|
000236  e250              B        |L5.1754|
000238  e1e4              B        |L5.1540|
00023a  e1a1              B        |L5.1408|
00023c  e0c8              B        |L5.976|
00023e  e088              B        |L5.850|
000240  e02c              B        |L5.668|
000242  e023              B        |L5.652|
000244  e021              B        |L5.650|
000246  e01c              B        |L5.642|
000248  e7ff              B        |L5.586|
                  |L5.586|
;;;282                    case STATUS_CHECK_F3_L5://停机等待湿度变可以运行
;;;283                        g_timerun++;
00024a  488d              LDR      r0,|L5.1152|
00024c  8800              LDRH     r0,[r0,#0]  ; g_timerun
00024e  1c40              ADDS     r0,r0,#1
000250  498b              LDR      r1,|L5.1152|
000252  8008              STRH     r0,[r1,#0]
;;;284                        if(g_timerun>5)
000254  4608              MOV      r0,r1
000256  8800              LDRH     r0,[r0,#0]  ; g_timerun
000258  2805              CMP      r0,#5
00025a  dd11              BLE      |L5.640|
;;;285                        {
;;;286                             DHT11_ReadData(&g_DHT11);
00025c  4889              LDR      r0,|L5.1156|
00025e  f7fffffe          BL       DHT11_ReadData
;;;287                             if(g_DHT11.Hum>=CHECKL4HUM) //>=50%
000262  4888              LDR      r0,|L5.1156|
000264  8900              LDRH     r0,[r0,#8]  ; g_DHT11
000266  f5b07ffa          CMP      r0,#0x1f4
00026a  db06              BLT      |L5.634|
;;;288                            {
;;;289                                FunO3Control(4,1);//1-4开
00026c  2101              MOVS     r1,#1
00026e  2004              MOVS     r0,#4
000270  f7fffffe          BL       FunO3Control
;;;290                               // FunFanClose(); //风扇关
;;;291                                g_status = STATUS_CHECK_F3_L4;
000274  2011              MOVS     r0,#0x11
000276  4960              LDR      r1,|L5.1016|
000278  7008              STRB     r0,[r1,#0]
                  |L5.634|
;;;292                            }
;;;293                            g_timerun = 0;
00027a  2000              MOVS     r0,#0
00027c  4980              LDR      r1,|L5.1152|
00027e  8008              STRH     r0,[r1,#0]
                  |L5.640|
;;;294                        }
;;;295                        break;
000280  e260              B        |L5.1860|
                  |L5.642|
;;;296                    case STATUS_CHECK_F4://
;;;297                         g_status = STATUS_AUTOV_RUN_F1;
000282  2017              MOVS     r0,#0x17
000284  495c              LDR      r1,|L5.1016|
000286  7008              STRB     r0,[r1,#0]
;;;298    //                    g_timerun++;
;;;299    //                    tim_print_result();
;;;300    //                    if(g_timerun>=5)
;;;301    //                    {
;;;302    //                        g_timerun = 0;
;;;303    //                        if((g_checkfreok[0]>=3)&&(g_checkfreok[1]>=3)&&(g_checkfreok[2]>=3)&&(g_checkfreok[3]>=3))
;;;304    //                        {
;;;305    //                            g_status = STATUS_AUTOV_RUN_F1;
;;;306    //                            g_checkfreok[0] =0;
;;;307    //                            g_checkfreok[1] =0;
;;;308    //                            g_checkfreok[2] =0;
;;;309    //                            g_checkfreok[3] =0;
;;;310    //                            TIM_Cmd(TIM3,DISABLE ); //关闭测频功能
;;;311    //                            bsp_ScreenUPdateSYSSTATUS(g_status);
;;;312    //                            bsp_DelayMS(100);
;;;313    //                            bsp_ScreenUPdateSYSSTATUS(g_status);
;;;314    //                        }
;;;315    //                        else
;;;316    //                        {
;;;317    //                             g_status = STATUS_CHECK_FAIL;
;;;318    //                        }
;;;319    //                        
;;;320    //                    }
;;;321                        
;;;322                        break;
000288  e25c              B        |L5.1860|
                  |L5.650|
;;;323                    case STATUS_CHECK_FAIL :
;;;324                        
;;;325                        break;
00028a  e25b              B        |L5.1860|
                  |L5.652|
;;;326     //--------------------------自动体积模式 状态轮询------------------begin----------------------------//  
;;;327                    case STATUS_AUTOV_RUN_F1://2分钟
;;;328                        g_status = STATUS_AUTOV_RUN_F2;
00028c  2018              MOVS     r0,#0x18
00028e  495a              LDR      r1,|L5.1016|
000290  7008              STRB     r0,[r1,#0]
;;;329                        TIM_Cmd(TIM3,DISABLE ); //关闭测频功能
000292  2100              MOVS     r1,#0
000294  487c              LDR      r0,|L5.1160|
000296  f7fffffe          BL       TIM_Cmd
;;;330                        
;;;331    //                   g_timerun++;
;;;332    //                   if(g_timerun>120)
;;;333    //                   {
;;;334    //                      g_timerun =0;
;;;335    //                      g_status = STATUS_AUTOV_RUN_F2;
;;;336    //                   }
;;;337                        break;
00029a  e253              B        |L5.1860|
                  |L5.668|
;;;338                    case STATUS_AUTOV_RUN_F2: //第一次计算
;;;339                        kp = FunO3CalParameter();
00029c  f7fffffe          BL       FunO3CalParameter
0002a0  497a              LDR      r1,|L5.1164|
0002a2  6008              STR      r0,[r1,#0]  ; kp
;;;340                        g_AutoVtime = kv*g_lenth*g_width*g_height/1000.0-120*kp;
0002a4  4608              MOV      r0,r1
0002a6  6801              LDR      r1,[r0,#0]  ; kp
0002a8  4879              LDR      r0,|L5.1168|
0002aa  f7fffffe          BL       __aeabi_fmul
0002ae  4680              MOV      r8,r0
0002b0  f7fffffe          BL       __aeabi_f2d
0002b4  4606              MOV      r6,r0
0002b6  460f              MOV      r7,r1
0002b8  4870              LDR      r0,|L5.1148|
0002ba  8800              LDRH     r0,[r0,#0]  ; g_height
0002bc  f7fffffe          BL       __aeabi_ui2f
0002c0  9006              STR      r0,[sp,#0x18]
0002c2  486d              LDR      r0,|L5.1144|
0002c4  8800              LDRH     r0,[r0,#0]  ; g_width
0002c6  f7fffffe          BL       __aeabi_ui2f
0002ca  9005              STR      r0,[sp,#0x14]
0002cc  4869              LDR      r0,|L5.1140|
0002ce  8800              LDRH     r0,[r0,#0]  ; g_lenth
0002d0  f7fffffe          BL       __aeabi_ui2f
0002d4  9004              STR      r0,[sp,#0x10]
0002d6  486f              LDR      r0,|L5.1172|
0002d8  6801              LDR      r1,[r0,#0]  ; kv
0002da  9804              LDR      r0,[sp,#0x10]
0002dc  f7fffffe          BL       __aeabi_fmul
0002e0  4683              MOV      r11,r0
0002e2  9905              LDR      r1,[sp,#0x14]
0002e4  f7fffffe          BL       __aeabi_fmul
0002e8  4682              MOV      r10,r0
0002ea  9906              LDR      r1,[sp,#0x18]
0002ec  f7fffffe          BL       __aeabi_fmul
0002f0  9007              STR      r0,[sp,#0x1c]
0002f2  f7fffffe          BL       __aeabi_f2d
0002f6  4680              MOV      r8,r0
0002f8  2200              MOVS     r2,#0
0002fa  4b67              LDR      r3,|L5.1176|
0002fc  f7fffffe          BL       __aeabi_ddiv
000300  4632              MOV      r2,r6
000302  463b              MOV      r3,r7
000304  e9cd0108          STRD     r0,r1,[sp,#0x20]
000308  f7fffffe          BL       __aeabi_dsub
00030c  4604              MOV      r4,r0
00030e  f7fffffe          BL       __aeabi_d2f
000312  4962              LDR      r1,|L5.1180|
000314  6008              STR      r0,[r1,#0]  ; g_AutoVtime
;;;341                        printf("kp = %f, kv=%f, the time is %f\r\n",kp,kv,g_AutoVtime);
000316  4608              MOV      r0,r1
000318  6800              LDR      r0,[r0,#0]  ; g_AutoVtime
00031a  f7fffffe          BL       __aeabi_f2d
00031e  4604              MOV      r4,r0
000320  460d              MOV      r5,r1
000322  485c              LDR      r0,|L5.1172|
000324  6800              LDR      r0,[r0,#0]  ; kv
000326  f7fffffe          BL       __aeabi_f2d
00032a  4680              MOV      r8,r0
00032c  4689              MOV      r9,r1
00032e  4857              LDR      r0,|L5.1164|
000330  6800              LDR      r0,[r0,#0]  ; kp
000332  f7fffffe          BL       __aeabi_f2d
000336  4606              MOV      r6,r0
000338  4632              MOV      r2,r6
00033a  460b              MOV      r3,r1
00033c  a058              ADR      r0,|L5.1184|
00033e  e9cd8900          STRD     r8,r9,[sp,#0]
000342  e9cd4502          STRD     r4,r5,[sp,#8]
000346  f7fffffe          BL       __2printf
;;;342                        g_status = STATUS_AUTOV_RUN_F3;
00034a  2019              MOVS     r0,#0x19
00034c  492a              LDR      r1,|L5.1016|
00034e  7008              STRB     r0,[r1,#0]
;;;343                        break;
000350  e1f8              B        |L5.1860|
                  |L5.850|
;;;344                    case STATUS_AUTOV_RUN_F3: //根据计算时间，判断下一步干什么
;;;345                       
;;;346                        if(g_AutoVtime<AUTOVCALTIME)
000352  495c              LDR      r1,|L5.1220|
000354  4851              LDR      r0,|L5.1180|
000356  6800              LDR      r0,[r0,#0]  ; g_AutoVtime
000358  f7fffffe          BL       __aeabi_cfcmple
00035c  d234              BCS      |L5.968|
;;;347                        {
;;;348                           g_status = STATUS_AUTOV_RUN_ON; //进入震荡模式
00035e  201c              MOVS     r0,#0x1c
000360  4925              LDR      r1,|L5.1016|
000362  7008              STRB     r0,[r1,#0]
;;;349                           FunO3Control(2,g_o3SwitchIndex);//开2个
000364  4858              LDR      r0,|L5.1224|
000366  7801              LDRB     r1,[r0,#0]  ; g_o3SwitchIndex
000368  2002              MOVS     r0,#2
00036a  f7fffffe          BL       FunO3Control
;;;350                            g_touch = 12;
00036e  200c              MOVS     r0,#0xc
000370  4956              LDR      r1,|L5.1228|
000372  7008              STRB     r0,[r1,#0]
;;;351                            g_AutoOsctime = kc*g_lenth*g_width*g_height/1000.0;
000374  4841              LDR      r0,|L5.1148|
000376  8800              LDRH     r0,[r0,#0]  ; g_height
000378  f7fffffe          BL       __aeabi_ui2f
00037c  4683              MOV      r11,r0
00037e  483e              LDR      r0,|L5.1144|
000380  8800              LDRH     r0,[r0,#0]  ; g_width
000382  f7fffffe          BL       __aeabi_ui2f
000386  9009              STR      r0,[sp,#0x24]
000388  483a              LDR      r0,|L5.1140|
00038a  8800              LDRH     r0,[r0,#0]  ; g_lenth
00038c  f7fffffe          BL       __aeabi_ui2f
000390  9008              STR      r0,[sp,#0x20]
000392  484f              LDR      r0,|L5.1232|
000394  6801              LDR      r1,[r0,#0]  ; kc
000396  9808              LDR      r0,[sp,#0x20]
000398  f7fffffe          BL       __aeabi_fmul
00039c  4682              MOV      r10,r0
00039e  9909              LDR      r1,[sp,#0x24]
0003a0  f7fffffe          BL       __aeabi_fmul
0003a4  4681              MOV      r9,r0
0003a6  4659              MOV      r1,r11
0003a8  f7fffffe          BL       __aeabi_fmul
0003ac  4604              MOV      r4,r0
0003ae  f7fffffe          BL       __aeabi_f2d
0003b2  4607              MOV      r7,r0
0003b4  2200              MOVS     r2,#0
0003b6  4b38              LDR      r3,|L5.1176|
0003b8  f7fffffe          BL       __aeabi_ddiv
0003bc  4605              MOV      r5,r0
0003be  f7fffffe          BL       __aeabi_d2f
0003c2  4944              LDR      r1,|L5.1236|
0003c4  6008              STR      r0,[r1,#0]  ; g_AutoOsctime
0003c6  e002              B        |L5.974|
                  |L5.968|
;;;352                        }
;;;353                        else  //时间未到
;;;354                        {
;;;355                           g_status = STATUS_AUTOV_RUN_F4; //等待2分钟
0003c8  201b              MOVS     r0,#0x1b
0003ca  490b              LDR      r1,|L5.1016|
0003cc  7008              STRB     r0,[r1,#0]
                  |L5.974|
;;;356                        }
;;;357                        break;
0003ce  e1b9              B        |L5.1860|
                  |L5.976|
;;;358    
;;;359                    case STATUS_AUTOV_RUN_F4: //等待2分钟 ，再次计算
;;;360                        g_timerun++;
0003d0  482b              LDR      r0,|L5.1152|
0003d2  8800              LDRH     r0,[r0,#0]  ; g_timerun
0003d4  1c40              ADDS     r0,r0,#1
0003d6  492a              LDR      r1,|L5.1152|
0003d8  8008              STRH     r0,[r1,#0]
;;;361                       if(g_timerun>AUTOVCALTIME)
0003da  4608              MOV      r0,r1
0003dc  8800              LDRH     r0,[r0,#0]  ; g_timerun
0003de  283c              CMP      r0,#0x3c
0003e0  dd7a              BLE      |L5.1240|
;;;362                       {
;;;363                           kp = FunO3CalParameter();
0003e2  f7fffffe          BL       FunO3CalParameter
0003e6  4929              LDR      r1,|L5.1164|
0003e8  6008              STR      r0,[r1,#0]  ; kp
;;;364                          g_AutoVtime = g_AutoVtime - AUTOVCALTIME*kp; //T2 = T1 -2*KP
0003ea  4608              MOV      r0,r1
0003ec  6801              LDR      r1,[r0,#0]  ; kp
0003ee  4835              LDR      r0,|L5.1220|
0003f0  f7fffffe          BL       __aeabi_fmul
0003f4  4604              MOV      r4,r0
0003f6  e070              B        |L5.1242|
                  |L5.1016|
                          DCD      g_status
                  |L5.1020|
                          DCD      SADDR485
                  |L5.1024|
000400  63757272          DCB      "current status = %d  SLAVE NUM = %d\r\n",0
000404  656e7420
000408  73746174
00040c  7573203d
000410  20256420
000414  20534c41
000418  5645204e
00041c  554d203d
000420  2025640d
000424  0a00    
000426  00                DCB      0
000427  00                DCB      0
                  |L5.1064|
                          DCD      g_sysruntime
                  |L5.1068|
                          DCD      g_tVar
                  |L5.1072|
000430  73797374          DCB      "system all stop!\r\n",0
000434  656d2061
000438  6c6c2073
00043c  746f7021
000440  0d0a00  
000443  00                DCB      0
                  |L5.1092|
000444  73797374          DCB      "system all start! mode  = %d,L=%d,W=%d,H=%d\r\n",0
000448  656d2061
00044c  6c6c2073
000450  74617274
000454  21206d6f
000458  64652020
00045c  3d202564
000460  2c4c3d25
000464  642c573d
000468  25642c48
00046c  3d25640d
000470  0a00    
000472  00                DCB      0
000473  00                DCB      0
                  |L5.1140|
                          DCD      g_lenth
                  |L5.1144|
                          DCD      g_width
                  |L5.1148|
                          DCD      g_height
                  |L5.1152|
                          DCD      g_timerun
                  |L5.1156|
                          DCD      g_DHT11
                  |L5.1160|
                          DCD      0x40000400
                  |L5.1164|
                          DCD      ||kp||
                  |L5.1168|
                          DCD      0x42f00000
                  |L5.1172|
                          DCD      ||kv||
                  |L5.1176|
                          DCD      0x408f4000
                  |L5.1180|
                          DCD      g_AutoVtime
                  |L5.1184|
0004a0  6b70203d          DCB      "kp = %f, kv=%f, the time is %f\r\n",0
0004a4  2025662c
0004a8  206b763d
0004ac  25662c20
0004b0  74686520
0004b4  74696d65
0004b8  20697320
0004bc  25660d0a
0004c0  00      
0004c1  00                DCB      0
0004c2  00                DCB      0
0004c3  00                DCB      0
                  |L5.1220|
                          DCD      0x42700000
                  |L5.1224|
                          DCD      g_o3SwitchIndex
                  |L5.1228|
                          DCD      g_touch
                  |L5.1232|
                          DCD      ||kc||
                  |L5.1236|
                          DCD      g_AutoOsctime
                  |L5.1240|
0004d8  e051              B        |L5.1406|
                  |L5.1242|
0004da  489e              LDR      r0,|L5.1876|
0004dc  6801              LDR      r1,[r0,#0]  ; g_AutoVtime
0004de  4620              MOV      r0,r4
0004e0  f7fffffe          BL       __aeabi_frsub
0004e4  499b              LDR      r1,|L5.1876|
0004e6  6008              STR      r0,[r1,#0]  ; g_AutoVtime
;;;365                          printf("kp = %f, kv=%f, the time is %f osc time =%f\r\n",kp,kv,g_AutoVtime,kc*g_lenth*g_width*g_height/1000.0);
0004e8  489b              LDR      r0,|L5.1880|
0004ea  8800              LDRH     r0,[r0,#0]  ; g_height
0004ec  f7fffffe          BL       __aeabi_ui2f
0004f0  9005              STR      r0,[sp,#0x14]
0004f2  489a              LDR      r0,|L5.1884|
0004f4  8800              LDRH     r0,[r0,#0]  ; g_width
0004f6  f7fffffe          BL       __aeabi_ui2f
0004fa  9003              STR      r0,[sp,#0xc]
0004fc  4898              LDR      r0,|L5.1888|
0004fe  8800              LDRH     r0,[r0,#0]  ; g_lenth
000500  f7fffffe          BL       __aeabi_ui2f
000504  9002              STR      r0,[sp,#8]
000506  4897              LDR      r0,|L5.1892|
000508  6801              LDR      r1,[r0,#0]  ; kc
00050a  9802              LDR      r0,[sp,#8]
00050c  f7fffffe          BL       __aeabi_fmul
000510  4683              MOV      r11,r0
000512  9903              LDR      r1,[sp,#0xc]
000514  f7fffffe          BL       __aeabi_fmul
000518  9004              STR      r0,[sp,#0x10]
00051a  9905              LDR      r1,[sp,#0x14]
00051c  f7fffffe          BL       __aeabi_fmul
000520  4682              MOV      r10,r0
000522  f7fffffe          BL       __aeabi_f2d
000526  4606              MOV      r6,r0
000528  2200              MOVS     r2,#0
00052a  4b8f              LDR      r3,|L5.1896|
00052c  f7fffffe          BL       __aeabi_ddiv
000530  4604              MOV      r4,r0
000532  460d              MOV      r5,r1
000534  4887              LDR      r0,|L5.1876|
000536  6800              LDR      r0,[r0,#0]  ; g_AutoVtime
000538  f7fffffe          BL       __aeabi_f2d
00053c  4680              MOV      r8,r0
00053e  4689              MOV      r9,r1
000540  488a              LDR      r0,|L5.1900|
000542  6800              LDR      r0,[r0,#0]  ; kv
000544  f7fffffe          BL       __aeabi_f2d
000548  e9cd0108          STRD     r0,r1,[sp,#0x20]
00054c  4888              LDR      r0,|L5.1904|
00054e  6800              LDR      r0,[r0,#0]  ; kp
000550  f7fffffe          BL       __aeabi_f2d
000554  e9cd8902          STRD     r8,r9,[sp,#8]
000558  e9cd4504          STRD     r4,r5,[sp,#0x10]
00055c  e9cd0106          STRD     r0,r1,[sp,#0x18]
000560  e9dd0108          LDRD     r0,r1,[sp,#0x20]
000564  e9cd0100          STRD     r0,r1,[sp,#0]
000568  a082              ADR      r0,|L5.1908|
00056a  e9dd2306          LDRD     r2,r3,[sp,#0x18]
00056e  f7fffffe          BL       __2printf
;;;366                          g_timerun =0;
000572  2000              MOVS     r0,#0
000574  498b              LDR      r1,|L5.1956|
000576  8008              STRH     r0,[r1,#0]
;;;367                          g_status = STATUS_AUTOV_RUN_F3; //继续回去计算时间
000578  2019              MOVS     r0,#0x19
00057a  498b              LDR      r1,|L5.1960|
00057c  7008              STRB     r0,[r1,#0]
                  |L5.1406|
;;;368                       }
;;;369                        break;
00057e  e0e1              B        |L5.1860|
                  |L5.1408|
;;;370                    case STATUS_AUTOV_RUN_ON://震荡模式 开阶段
;;;371                         kp = FunO3CalParameter();
000580  f7fffffe          BL       FunO3CalParameter
000584  497a              LDR      r1,|L5.1904|
000586  6008              STR      r0,[r1,#0]  ; kp
;;;372                         g_AutoOsctime = g_AutoOsctime-kp;
000588  4608              MOV      r0,r1
00058a  6801              LDR      r1,[r0,#0]  ; kp
00058c  4887              LDR      r0,|L5.1964|
00058e  6800              LDR      r0,[r0,#0]  ; g_AutoOsctime
000590  f7fffffe          BL       __aeabi_fsub
000594  4985              LDR      r1,|L5.1964|
000596  6008              STR      r0,[r1,#0]  ; g_AutoOsctime
;;;373                         printf("OSC TIME = %5.1f\r\n",g_AutoOsctime);
000598  4608              MOV      r0,r1
00059a  6800              LDR      r0,[r0,#0]  ; g_AutoOsctime
00059c  f7fffffe          BL       __aeabi_f2d
0005a0  4604              MOV      r4,r0
0005a2  4622              MOV      r2,r4
0005a4  460b              MOV      r3,r1
0005a6  a082              ADR      r0,|L5.1968|
0005a8  f7fffffe          BL       __2printf
;;;374                         g_timerun++;
0005ac  487d              LDR      r0,|L5.1956|
0005ae  8800              LDRH     r0,[r0,#0]  ; g_timerun
0005b0  1c40              ADDS     r0,r0,#1
0005b2  497c              LDR      r1,|L5.1956|
0005b4  8008              STRH     r0,[r1,#0]
;;;375                         g_AutoVEntercount++;
0005b6  4883              LDR      r0,|L5.1988|
0005b8  8800              LDRH     r0,[r0,#0]  ; g_AutoVEntercount
0005ba  1c40              ADDS     r0,r0,#1
0005bc  4981              LDR      r1,|L5.1988|
0005be  8008              STRH     r0,[r1,#0]
;;;376                       if(g_timerun>AUTOVONTIME)
0005c0  4878              LDR      r0,|L5.1956|
0005c2  8800              LDRH     r0,[r0,#0]  ; g_timerun
0005c4  2878              CMP      r0,#0x78
0005c6  dd0a              BLE      |L5.1502|
;;;377                       {
;;;378                          g_timerun =0;
0005c8  2000              MOVS     r0,#0
0005ca  4976              LDR      r1,|L5.1956|
0005cc  8008              STRH     r0,[r1,#0]
;;;379                          g_status = STATUS_AUTOV_RUN_OFF; //进入震荡 关阶段
0005ce  201d              MOVS     r0,#0x1d
0005d0  4975              LDR      r1,|L5.1960|
0005d2  7008              STRB     r0,[r1,#0]
;;;380                          FunO3Control(0,g_o3SwitchIndex);
0005d4  487c              LDR      r0,|L5.1992|
0005d6  7801              LDRB     r1,[r0,#0]  ; g_o3SwitchIndex
0005d8  2000              MOVS     r0,#0
0005da  f7fffffe          BL       FunO3Control
                  |L5.1502|
;;;381                       }
;;;382                       if(g_AutoOsctime<2)
0005de  f04f4180          MOV      r1,#0x40000000
0005e2  4872              LDR      r0,|L5.1964|
0005e4  6800              LDR      r0,[r0,#0]  ; g_AutoOsctime
0005e6  f7fffffe          BL       __aeabi_cfcmple
0005ea  d20a              BCS      |L5.1538|
;;;383                      // if(g_AutoVEntercount>g_AutoOsctime)
;;;384                       {
;;;385                           g_timerun =0;
0005ec  2000              MOVS     r0,#0
0005ee  496d              LDR      r1,|L5.1956|
0005f0  8008              STRH     r0,[r1,#0]
;;;386                           g_AutoVEntercount=0;
0005f2  4974              LDR      r1,|L5.1988|
0005f4  8008              STRH     r0,[r1,#0]
;;;387                           FunO3Control(0,1);
0005f6  2101              MOVS     r1,#1
0005f8  f7fffffe          BL       FunO3Control
;;;388                           g_status = STATUS_AUTOV_WAIT_D1;
0005fc  201e              MOVS     r0,#0x1e
0005fe  496a              LDR      r1,|L5.1960|
000600  7008              STRB     r0,[r1,#0]
                  |L5.1538|
;;;389                       }
;;;390                        break;
000602  e09f              B        |L5.1860|
                  |L5.1540|
;;;391                    case STATUS_AUTOV_RUN_OFF://震荡模式 关阶段
;;;392                         kp = FunO3CalParameter();
000604  f7fffffe          BL       FunO3CalParameter
000608  4959              LDR      r1,|L5.1904|
00060a  6008              STR      r0,[r1,#0]  ; kp
;;;393                         g_AutoOsctime = g_AutoOsctime-kp;
00060c  4608              MOV      r0,r1
00060e  6801              LDR      r1,[r0,#0]  ; kp
000610  4866              LDR      r0,|L5.1964|
000612  6800              LDR      r0,[r0,#0]  ; g_AutoOsctime
000614  f7fffffe          BL       __aeabi_fsub
000618  4964              LDR      r1,|L5.1964|
00061a  6008              STR      r0,[r1,#0]  ; g_AutoOsctime
;;;394                         printf("OSC TIME = %5.1f\r\n",g_AutoOsctime);
00061c  4608              MOV      r0,r1
00061e  6800              LDR      r0,[r0,#0]  ; g_AutoOsctime
000620  f7fffffe          BL       __aeabi_f2d
000624  4604              MOV      r4,r0
000626  4622              MOV      r2,r4
000628  460b              MOV      r3,r1
00062a  a061              ADR      r0,|L5.1968|
00062c  f7fffffe          BL       __2printf
;;;395                         g_timerun++;
000630  485c              LDR      r0,|L5.1956|
000632  8800              LDRH     r0,[r0,#0]  ; g_timerun
000634  1c40              ADDS     r0,r0,#1
000636  495b              LDR      r1,|L5.1956|
000638  8008              STRH     r0,[r1,#0]
;;;396                         g_AutoVEntercount++;
00063a  4862              LDR      r0,|L5.1988|
00063c  8800              LDRH     r0,[r0,#0]  ; g_AutoVEntercount
00063e  1c40              ADDS     r0,r0,#1
000640  4960              LDR      r1,|L5.1988|
000642  8008              STRH     r0,[r1,#0]
;;;397                       if(g_timerun>koscoff*100000.0/(g_lenth*g_width*g_height/1000.0)) //震荡关时间与体积成反比
000644  4946              LDR      r1,|L5.1888|
000646  8809              LDRH     r1,[r1,#0]  ; g_lenth
000648  4a44              LDR      r2,|L5.1884|
00064a  8812              LDRH     r2,[r2,#0]  ; g_width
00064c  4351              MULS     r1,r2,r1
00064e  4a42              LDR      r2,|L5.1880|
000650  8812              LDRH     r2,[r2,#0]  ; g_height
000652  fb01f002          MUL      r0,r1,r2
000656  f7fffffe          BL       __aeabi_i2d
00065a  4606              MOV      r6,r0
00065c  2200              MOVS     r2,#0
00065e  4b42              LDR      r3,|L5.1896|
000660  f7fffffe          BL       __aeabi_ddiv
000664  4682              MOV      r10,r0
000666  468b              MOV      r11,r1
000668  4858              LDR      r0,|L5.1996|
00066a  6800              LDR      r0,[r0,#0]  ; koscoff
00066c  f7fffffe          BL       __aeabi_f2d
000670  4606              MOV      r6,r0
000672  2200              MOVS     r2,#0
000674  4b56              LDR      r3,|L5.2000|
000676  f7fffffe          BL       __aeabi_dmul
00067a  4652              MOV      r2,r10
00067c  465b              MOV      r3,r11
00067e  e9cd0108          STRD     r0,r1,[sp,#0x20]
000682  f7fffffe          BL       __aeabi_ddiv
000686  4604              MOV      r4,r0
000688  460d              MOV      r5,r1
00068a  4846              LDR      r0,|L5.1956|
00068c  8800              LDRH     r0,[r0,#0]  ; g_timerun
00068e  f7fffffe          BL       __aeabi_ui2d
000692  4680              MOV      r8,r0
000694  4622              MOV      r2,r4
000696  462b              MOV      r3,r5
000698  f7fffffe          BL       __aeabi_cdrcmple
00069c  d209              BCS      |L5.1714|
;;;398                       {
;;;399                          g_timerun =0;
00069e  2000              MOVS     r0,#0
0006a0  4940              LDR      r1,|L5.1956|
0006a2  8008              STRH     r0,[r1,#0]
;;;400                          g_status = STATUS_AUTOV_RUN_ON; //进入震荡 开阶段
0006a4  201c              MOVS     r0,#0x1c
0006a6  4940              LDR      r1,|L5.1960|
0006a8  7008              STRB     r0,[r1,#0]
;;;401                          FunO3Control(2,1);
0006aa  2101              MOVS     r1,#1
0006ac  2002              MOVS     r0,#2
0006ae  f7fffffe          BL       FunO3Control
                  |L5.1714|
;;;402                          
;;;403                       }
;;;404                      //  if(g_AutoVEntercount>g_AutoOsctime)
;;;405                       if(g_AutoOsctime<2)
0006b2  f04f4180          MOV      r1,#0x40000000
0006b6  483d              LDR      r0,|L5.1964|
0006b8  6800              LDR      r0,[r0,#0]  ; g_AutoOsctime
0006ba  f7fffffe          BL       __aeabi_cfcmple
0006be  d20b              BCS      |L5.1752|
;;;406                       {
;;;407                           g_timerun =0;
0006c0  2000              MOVS     r0,#0
0006c2  4938              LDR      r1,|L5.1956|
0006c4  8008              STRH     r0,[r1,#0]
;;;408                           g_AutoVEntercount=0;
0006c6  493f              LDR      r1,|L5.1988|
0006c8  8008              STRH     r0,[r1,#0]
;;;409                           g_status = STATUS_AUTOV_WAIT_D1;
0006ca  201e              MOVS     r0,#0x1e
0006cc  4936              LDR      r1,|L5.1960|
0006ce  7008              STRB     r0,[r1,#0]
;;;410                           FunO3Control(0,1);
0006d0  2101              MOVS     r1,#1
0006d2  2000              MOVS     r0,#0
0006d4  f7fffffe          BL       FunO3Control
                  |L5.1752|
;;;411                       }
;;;412                        break;
0006d8  e034              B        |L5.1860|
                  |L5.1754|
;;;413                     case STATUS_AUTOV_WAIT_D1://等待待机
;;;414                         g_timerun++;
0006da  4832              LDR      r0,|L5.1956|
0006dc  8800              LDRH     r0,[r0,#0]  ; g_timerun
0006de  1c40              ADDS     r0,r0,#1
0006e0  4930              LDR      r1,|L5.1956|
0006e2  8008              STRH     r0,[r1,#0]
;;;415                         if(g_timerun>FANOFFTIME)
0006e4  4608              MOV      r0,r1
0006e6  8800              LDRH     r0,[r0,#0]  ; g_timerun
0006e8  2878              CMP      r0,#0x78
0006ea  dd14              BLE      |L5.1814|
;;;416                       {
;;;417                          g_timerun =0;
0006ec  2000              MOVS     r0,#0
0006ee  8008              STRH     r0,[r1,#0]
;;;418                          if((g_chemical ==1) &&(g_secondrun==0))//带芳香
0006f0  4838              LDR      r0,|L5.2004|
0006f2  7800              LDRB     r0,[r0,#0]  ; g_chemical
0006f4  2801              CMP      r0,#1
0006f6  d109              BNE      |L5.1804|
0006f8  4837              LDR      r0,|L5.2008|
0006fa  7800              LDRB     r0,[r0,#0]  ; g_secondrun
0006fc  b930              CBNZ     r0,|L5.1804|
;;;419                          {
;;;420                              g_secondrun =1;
0006fe  2001              MOVS     r0,#1
000700  4935              LDR      r1,|L5.2008|
000702  7008              STRB     r0,[r1,#0]
;;;421                               g_status = STATUS_AUTOV_START; //重新开始一次
000704  200a              MOVS     r0,#0xa
000706  4928              LDR      r1,|L5.1960|
000708  7008              STRB     r0,[r1,#0]
00070a  e004              B        |L5.1814|
                  |L5.1804|
;;;422                          }
;;;423                          else
;;;424                          {
;;;425                            g_status = STATUS_AUTOV_WAIT; //进入待机状态
00070c  201f              MOVS     r0,#0x1f
00070e  4926              LDR      r1,|L5.1960|
000710  7008              STRB     r0,[r1,#0]
;;;426                            FunFanClose();
000712  f7fffffe          BL       FunFanClose
                  |L5.1814|
;;;427                          }
;;;428                         
;;;429                          
;;;430                       }
;;;431                       
;;;432                        break;
000716  e015              B        |L5.1860|
                  |L5.1816|
;;;433                      case STATUS_AUTOV_WAIT:
;;;434                         g_timerun++;
000718  4822              LDR      r0,|L5.1956|
00071a  8800              LDRH     r0,[r0,#0]  ; g_timerun
00071c  1c40              ADDS     r0,r0,#1
00071e  4921              LDR      r1,|L5.1956|
000720  8008              STRH     r0,[r1,#0]
;;;435                      //   bsp_ScreenUPdateSYSSTATUS(g_status);  
;;;436    
;;;437                         if(g_timerun>5)
000722  4608              MOV      r0,r1
000724  8800              LDRH     r0,[r0,#0]  ; g_timerun
000726  2805              CMP      r0,#5
000728  dd04              BLE      |L5.1844|
;;;438                         {
;;;439                             g_timerun =0;
00072a  2000              MOVS     r0,#0
00072c  8008              STRH     r0,[r1,#0]
;;;440                             g_status = STATUS_AUTOV_STOP_D1;
00072e  2020              MOVS     r0,#0x20
000730  491d              LDR      r1,|L5.1960|
000732  7008              STRB     r0,[r1,#0]
                  |L5.1844|
;;;441                         }
;;;442                        break;
000734  e006              B        |L5.1860|
                  |L5.1846|
;;;443                     
;;;444                         
;;;445                      case STATUS_AUTOV_STOP_D1://待机中
;;;446                         g_timerun++;
000736  481b              LDR      r0,|L5.1956|
000738  8800              LDRH     r0,[r0,#0]  ; g_timerun
00073a  1c40              ADDS     r0,r0,#1
00073c  4919              LDR      r1,|L5.1956|
00073e  8008              STRH     r0,[r1,#0]
;;;447                       
;;;448                         if(g_timerun %5 ==0)
;;;449                         {
;;;450                      //     bsp_PlayMusic();  
;;;451                             
;;;452                         }
;;;453                         
;;;454                        break;
000740  e000              B        |L5.1860|
                  |L5.1858|
;;;455                    
;;;456                     
;;;457    //---------------------------自动体积模式 状态轮询------------------end----------------------------//    
;;;458                    default:
;;;459                        break;
000742  bf00              NOP      
                  |L5.1860|
000744  bf00              NOP                            ;182
;;;460                
;;;461            }
;;;462            g_funcKey=0xff;  //g_func 恢复初始值
000746  20ff              MOVS     r0,#0xff
000748  4924              LDR      r1,|L5.2012|
00074a  8008              STRH     r0,[r1,#0]
;;;463    }
00074c  b00b              ADD      sp,sp,#0x2c
00074e  e8bd8ff0          POP      {r4-r11,pc}
;;;464    //-----------------------FunSwitch--------状态切换 end-------------------------//
                          ENDP

000752  0000              DCW      0x0000
                  |L5.1876|
                          DCD      g_AutoVtime
                  |L5.1880|
                          DCD      g_height
                  |L5.1884|
                          DCD      g_width
                  |L5.1888|
                          DCD      g_lenth
                  |L5.1892|
                          DCD      ||kc||
                  |L5.1896|
                          DCD      0x408f4000
                  |L5.1900|
                          DCD      ||kv||
                  |L5.1904|
                          DCD      ||kp||
                  |L5.1908|
000774  6b70203d          DCB      "kp = %f, kv=%f, the time is %f osc time =%f\r\n",0
000778  2025662c
00077c  206b763d
000780  25662c20
000784  74686520
000788  74696d65
00078c  20697320
000790  2566206f
000794  73632074
000798  696d6520
00079c  3d25660d
0007a0  0a00    
0007a2  00                DCB      0
0007a3  00                DCB      0
                  |L5.1956|
                          DCD      g_timerun
                  |L5.1960|
                          DCD      g_status
                  |L5.1964|
                          DCD      g_AutoOsctime
                  |L5.1968|
0007b0  4f534320          DCB      "OSC TIME = %5.1f\r\n",0
0007b4  54494d45
0007b8  203d2025
0007bc  352e3166
0007c0  0d0a00  
0007c3  00                DCB      0
                  |L5.1988|
                          DCD      g_AutoVEntercount
                  |L5.1992|
                          DCD      g_o3SwitchIndex
                  |L5.1996|
                          DCD      koscoff
                  |L5.2000|
                          DCD      0x40f86a00
                  |L5.2004|
                          DCD      g_chemical
                  |L5.2008|
                          DCD      g_secondrun
                  |L5.2012|
                          DCD      g_funcKey

                          AREA ||i.FunTouch||, CODE, READONLY, ALIGN=1

                  FunTouch PROC
;;;513    
;;;514    void FunTouch(void)
000000  4770              BX       lr
;;;515    {
;;;516    //    if(g_touch==1)   //输入密码正确时
;;;517    //    {
;;;518    //        bsp_SendKey(3); //跳转到设置体积
;;;519    //        bsp_DelayMS(100);
;;;520    //        bsp_SendKey(3);
;;;521    //        bsp_DelayMS(1);
;;;522    //        g_touch = 0xff;
;;;523    //            
;;;524    //    }
;;;525    //    else if(g_touch==2)  //输入密码错误时
;;;526    //    {
;;;527    //        bsp_SendKey(4); //回到状态界面
;;;528    //        bsp_DelayMS(5);
;;;529    //        bsp_SendKey(4); //回到状态界面
;;;530    //        bsp_DelayMS(5);
;;;531    //        bsp_DisableTouch();//关闭触摸
;;;532    //        g_touch = 0xff;
;;;533    //    }
;;;534    //    else if(g_touch==3)  //设置--确定按钮
;;;535    //    {
;;;536    //        bsp_DisableTouch(); //关闭触摸
;;;537    //        bsp_DelayMS(50);
;;;538    //        bsp_ScreenUpdateNet(g_status,g_WithoutOnenet);
;;;539    //        bsp_DelayMS(50);
;;;540    //        bsp_ScreenUpdateNet(g_status,g_WithoutOnenet);
;;;541    //        bsp_DelayMS(10);
;;;542    //        g_touch = 0xff;
;;;543    //    }
;;;544    //    else if(g_touch==4)  //设置--开启网络
;;;545    //    {
;;;546    //        eeResult[7] = 0;  //复位失败次数
;;;547    //        ee_WriteBytes(0,&eeResult[7],0x07,0x01); //写失败次数
;;;548    //       // nbiot_reset();
;;;549    //        g_touch = 0xff;
;;;550    //    }
;;;551    //    else if(g_touch==5)  //设置--关闭网络
;;;552    //    {
;;;553    //        eeResult[7] = 60;  //复位失败次数
;;;554    //        ee_WriteBytes(0,&eeResult[7],0x07,0x01); //写失败次数
;;;555    //      //  nbiot_reset();
;;;556    //        g_touch = 0xff;
;;;557    //    }
;;;558    //    else if(g_touch==6) //按键-启动密码界面
;;;559    //    {
;;;560    //        bsp_SendKey(0x02);  
;;;561    //        bsp_DelayMS(100); 
;;;562    //        bsp_SendKey(0x02);  
;;;563    //        bsp_DelayMS(100);
;;;564    //        bsp_EnableTouch();
;;;565    //        bsp_DelayMS(100);
;;;566    //        bsp_EnableTouch();
;;;567    //        bsp_DelayMS(10);
;;;568    //        g_touch = 0xff;
;;;569    // 
;;;570    // 
;;;571    //    }
;;;572    //    else if((g_touch==7)||(g_touch ==8)) //芳香类型 更新
;;;573    //    {
;;;574    //        bsp_ScreenUPdateChemical(g_chemical);
;;;575    //        bsp_DelayMS(100);
;;;576    //        bsp_ScreenUPdateChemical(g_chemical);
;;;577    //        bsp_DelayMS(100);
;;;578    //                    
;;;579    //        eeResult[1] = g_chemical;
;;;580    //        eeResult[0] |= 0x10;                       //标志 化学类型已经设置
;;;581    //        ee_WriteBytes(0,eeResult,0x00,0x01);       //写标志
;;;582    //        ee_WriteBytes(0,&eeResult[1],0x0f,0x01);   //写化学类型
;;;583    //        
;;;584    //        g_touch = 0xff;
;;;585    //     }
;;;586    //    
;;;587    //     else if((g_touch==9)||(g_touch ==10)) //植株类型 更新
;;;588    //    {
;;;589    //        bsp_ScreenUPdateType(g_plant);
;;;590    //        bsp_DelayMS(100);
;;;591    //        bsp_ScreenUPdateType(g_plant);
;;;592    //        bsp_DelayMS(100);
;;;593    //        
;;;594    //        eeResult[1] = g_plant;
;;;595    //        eeResult[0] |= 0x08;                       //标志 植株类型已经设置
;;;596    //        ee_WriteBytes(0,eeResult,0x00,0x01);       //写标志
;;;597    //        ee_WriteBytes(0,&eeResult[1],0x0e,0x01);   //写植株类型
;;;598    //        
;;;599    //        g_touch = 0xff;
;;;600    //     }
;;;601    //    else if((g_touch == 11)||(g_touch == 12))  //更新显示屏  开始运行
;;;602    //    {
;;;603    //        bsp_ScreenUPdateSYSSTATUS(g_status);
;;;604    //        bsp_DelayMS(100);
;;;605    //        bsp_ScreenUPdateSYSSTATUS(g_status);
;;;606    //        g_touch = 0xff;
;;;607    //    }
;;;608    //    else if(g_touch == 13)  //更新显示屏  开始运行
;;;609    //    {
;;;610    //        bsp_ScreenUPdateSYSSTATUS(g_status);
;;;611    //        bsp_DelayMS(100);
;;;612    //        bsp_ScreenUPdateSYSSTATUS(g_status);
;;;613    //        g_touch = 0xff;
;;;614    //    }
;;;615        
;;;616    }
;;;617    
                          ENDP


                          AREA ||i.bsp_SysCheck||, CODE, READONLY, ALIGN=1

                  bsp_SysCheck PROC
;;;467    //系统自检函数 ，检测系统运行是否ok 
;;;468    void bsp_SysCheck(void)
000000  4770              BX       lr
;;;469    {
;;;470    //    uint8_t tempsec;
;;;471    //    RTC_ReadClock();
;;;472    //    printf("%4d-%02d-%02d %02d:%02d:%02d\r\n", g_tRTC.Year, g_tRTC.Mon, g_tRTC.Day, 
;;;473    //                  g_tRTC.Hour, g_tRTC.Min, g_tRTC.Sec);
;;;474    //    while(1)
;;;475    //    {
;;;476    //       	/* 读时钟，结果存放在全局变量 g_tRTC */
;;;477    //        if(tempsec != g_tRTC.Sec)
;;;478    //        {
;;;479    //            RTC_ReadClock();
;;;480    //            tempsec=g_tRTC.Sec;
;;;481    //            switch(g_status)
;;;482    //            {   
;;;483    //                case  STATUS_CHECK_F1:
;;;484    //                    DHT11_ReadData(&g_DHT11);
;;;485    //                    if(g_DHT11.Hum>=850) //>=85%
;;;486    //                    {
;;;487    //                        
;;;488    //                    }
;;;489    //                    else if(g_DHT11.Hum>650)//>=65% <=85%
;;;490    //                    {
;;;491    //                        
;;;492    //                    }
;;;493    //                    else if(g_DHT11.Hum>550)//>=55% <= 65%
;;;494    //                    {
;;;495    //                        
;;;496    //                    }
;;;497    //                    break;
;;;498    //                case  STATUS_CHECK_F2:
;;;499    //                    break;
;;;500    //                case  STATUS_CHECK_F3:
;;;501    //                    break;
;;;502    //                case  STATUS_CHECK_F4:
;;;503    //                    break;
;;;504    //                case  STATUS_CHECK_F5:
;;;505    //                    break;
;;;506    //                default:
;;;507    //                    break;
;;;508    //                
;;;509    //            }
;;;510    //        }
;;;511    //    }
;;;512    }
;;;513    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_DHT11
                          %        10

                          AREA ||.data||, DATA, ALIGN=2

                  g_timerun
000000  0000              DCW      0x0000
                  g_AutoVEntercount
000002  0000              DCW      0x0000
                  g_o3SwitchIndex
000004  01000000          DCB      0x01,0x00,0x00,0x00
                  g_AutoVtime
000008  41200000          DCFS     0x41200000 ; 10
                  g_AutoOsctime
00000c  41200000          DCFS     0x41200000 ; 10

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\func.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_func_c_a7bc7a1c____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_func_c_a7bc7a1c____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_func_c_a7bc7a1c____REVSH|
#line 128
|__asm___6_func_c_a7bc7a1c____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
