; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\User -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User\app\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;121    
;;;122    void bsp_Idle(void)
000000  4770              BX       lr
;;;123    {
;;;124    	/* --- 喂狗 */
;;;125    
;;;126    	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;127    
;;;128    	/* 例如 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;129    	//GUI_Exec();
;;;130    
;;;131    	/* 例如 uIP 协议，可以插入uip轮询函数 */
;;;132    
;;;133    	
;;;134    }
;;;135    
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  bsp_Init PROC
;;;30     */
;;;31     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33         uint8_t ret;
;;;34     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;35     	bsp_InitUart(); 	/* 初始化串口 */
00000a  f7fffffe          BL       bsp_InitUart
;;;36     	bsp_InitLed(); 		/* 初始LED指示灯端口 */
00000e  f7fffffe          BL       bsp_InitLed
;;;37     	bsp_InitTimer();	/* 初始化系统滴答定时器 (此函数会开中断) */
000012  f7fffffe          BL       bsp_InitTimer
;;;38        // bsp_InitRTC();
;;;39         bsp_InitI2C();
000016  f7fffffe          BL       bsp_InitI2C
;;;40         if(ee_CheckOk())
00001a  f7fffffe          BL       ee_CheckOk
00001e  b118              CBZ      r0,|L2.40|
;;;41         {
;;;42             #ifdef USEDEBUG
;;;43             printf("eeprom initial ok！\r\n");
000020  a016              ADR      r0,|L2.124|
000022  f7fffffe          BL       __2printf
000026  e002              B        |L2.46|
                  |L2.40|
;;;44             #endif
;;;45         }
;;;46         else 
;;;47         {
;;;48             #ifdef USEDEBUG
;;;49             printf("eeprom initial error!\r\n");
000028  a01a              ADR      r0,|L2.148|
00002a  f7fffffe          BL       __2printf
                  |L2.46|
;;;50             #endif
;;;51         }
;;;52         bsp_InitIO(); 
00002e  f7fffffe          BL       bsp_InitIO
;;;53         bsp_InitDHT11();
000032  f7fffffe          BL       bsp_InitDHT11
;;;54         ret = DHT11_ReadData(&g_DHT11);
000036  481d              LDR      r0,|L2.172|
000038  f7fffffe          BL       DHT11_ReadData
00003c  4604              MOV      r4,r0
;;;55         #ifdef USEDEBUG
;;;56         if (ret == 1)
00003e  2c01              CMP      r4,#1
000040  d106              BNE      |L2.80|
;;;57         {
;;;58             printf("temp= %d  humi =  %d \r\n",g_DHT11.Temp, g_DHT11.Hum);
000042  481a              LDR      r0,|L2.172|
000044  8902              LDRH     r2,[r0,#8]  ; g_DHT11
000046  88c1              LDRH     r1,[r0,#6]  ; g_DHT11
000048  a019              ADR      r0,|L2.176|
00004a  f7fffffe          BL       __2printf
00004e  e002              B        |L2.86|
                  |L2.80|
;;;59         }
;;;60         else
;;;61         {
;;;62             printf("\r\n未发现DHT22温湿度传感器\r\n");
000050  a01d              ADR      r0,|L2.200|
000052  f7fffffe          BL       __2printf
                  |L2.86|
;;;63         }
;;;64         #endif
;;;65         BASIC_TIM_Init();
000056  f7fffffe          BL       BASIC_TIM_Init
;;;66         IWDG_Init(5,1250); //4S 看门狗
00005a  f24041e2          MOV      r1,#0x4e2
00005e  2005              MOVS     r0,#5
000060  f7fffffe          BL       IWDG_Init
;;;67         g_tVar.P01 = SADDR485;
000064  481f              LDR      r0,|L2.228|
000066  7800              LDRB     r0,[r0,#0]  ; SADDR485
000068  491f              LDR      r1,|L2.232|
00006a  8008              STRH     r0,[r1,#0]
;;;68         printf("\r\nA01 =%d D01=%d P21 =%d ",g_tVar.A01,g_tVar.D01,g_tVar.P21);
00006c  4608              MOV      r0,r1
00006e  8d03              LDRH     r3,[r0,#0x28]  ; g_tVar
000070  8fc2              LDRH     r2,[r0,#0x3e]  ; g_tVar
000072  8f81              LDRH     r1,[r0,#0x3c]  ; g_tVar
000074  a01d              ADR      r0,|L2.236|
000076  f7fffffe          BL       __2printf
;;;69     }
00007a  bd10              POP      {r4,pc}
;;;70     
                          ENDP

                  |L2.124|
00007c  65657072          DCB      "eeprom initial ok",163,161,"\r\n",0
000080  6f6d2069
000084  6e697469
000088  616c206f
00008c  6ba3a10d
000090  0a00    
000092  00                DCB      0
000093  00                DCB      0
                  |L2.148|
000094  65657072          DCB      "eeprom initial error!\r\n",0
000098  6f6d2069
00009c  6e697469
0000a0  616c2065
0000a4  72726f72
0000a8  210d0a00
                  |L2.172|
                          DCD      g_DHT11
                  |L2.176|
0000b0  74656d70          DCB      "temp= %d  humi =  %d \r\n",0
0000b4  3d202564
0000b8  20206875
0000bc  6d69203d
0000c0  20202564
0000c4  200d0a00
                  |L2.200|
0000c8  0d0aceb4          DCB      "\r\n",206,180,183,162,207,214,"DHT22",206,194,202,170,182
0000cc  b7a2cfd6
0000d0  44485432
0000d4  32cec2ca
0000d8  aab6    
0000da  c8b4abb8          DCB      200,180,171,184,208,198,247,"\r\n",0
0000de  d0c6f70d
0000e2  0a00    
                  |L2.228|
                          DCD      SADDR485
                  |L2.232|
                          DCD      g_tVar
                  |L2.236|
0000ec  0d0a4130          DCB      "\r\nA01 =%d D01=%d P21 =%d ",0
0000f0  31203d25
0000f4  64204430
0000f8  313d2564
0000fc  20503231
000100  203d2564
000104  2000    
000106  00                DCB      0
000107  00                DCB      0

                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;79     */
;;;80     void bsp_RunPer10ms(void)
000000  4770              BX       lr
;;;81     {
;;;82     //	bsp_KeyScan();		/* 按键扫描 */
;;;83     
;;;84     }
;;;85     
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=2

                  bsp_RunPer1ms PROC
;;;95     uint16_t count_led =0;
;;;96     void bsp_RunPer1ms(void)
000000  b510              PUSH     {r4,lr}
;;;97     {
;;;98         count_led++;
000002  4808              LDR      r0,|L4.36|
000004  8800              LDRH     r0,[r0,#0]  ; count_led
000006  1c40              ADDS     r0,r0,#1
000008  4906              LDR      r1,|L4.36|
00000a  8008              STRH     r0,[r1,#0]
;;;99         if(count_led >2000)
00000c  4608              MOV      r0,r1
00000e  8800              LDRH     r0,[r0,#0]  ; count_led
000010  f5b06ffa          CMP      r0,#0x7d0
000014  dd04              BLE      |L4.32|
;;;100        {
;;;101         count_led =0;
000016  2000              MOVS     r0,#0
000018  8008              STRH     r0,[r1,#0]
;;;102            bsp_LedToggle(1);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       bsp_LedToggle
                  |L4.32|
;;;103    //        bsp_IOToggle(1);
;;;104    //        bsp_IOToggle(2);
;;;105    //        bsp_IOToggle(3);
;;;106    //        bsp_IOToggle(4);
;;;107    //        bsp_IOToggle(5);
;;;108        }
;;;109       
;;;110    }
000020  bd10              POP      {r4,pc}
;;;111    
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      count_led

                          AREA ||.data||, DATA, ALIGN=1

                  count_led
000000  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 128
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
