; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f10x_iwdg.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f10x_iwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\User -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User\app\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\stm32f10x_iwdg.crf ..\..\Libraries\STM32F10x_StdPeriph_Driver\src\stm32f10x_iwdg.c]
                          THUMB

                          AREA ||i.IWDG_Enable||, CODE, READONLY, ALIGN=2

                  IWDG_Enable PROC
;;;153      */
;;;154    void IWDG_Enable(void)
000000  f64c40cc          MOV      r0,#0xcccc
;;;155    {
;;;156      IWDG->KR = KR_KEY_Enable;
000004  4901              LDR      r1,|L1.12|
000006  6008              STR      r0,[r1,#0]
;;;157    }
000008  4770              BX       lr
;;;158    
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  IWDG_GetFlagStatus PROC
;;;166      */
;;;167    FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
000000  4601              MOV      r1,r0
;;;168    {
;;;169      FlagStatus bitstatus = RESET;
000002  2000              MOVS     r0,#0
;;;170      /* Check the parameters */
;;;171      assert_param(IS_IWDG_FLAG(IWDG_FLAG));
;;;172      if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
000004  4a03              LDR      r2,|L2.20|
000006  68d2              LDR      r2,[r2,#0xc]
000008  400a              ANDS     r2,r2,r1
00000a  b10a              CBZ      r2,|L2.16|
;;;173      {
;;;174        bitstatus = SET;
00000c  2001              MOVS     r0,#1
00000e  e000              B        |L2.18|
                  |L2.16|
;;;175      }
;;;176      else
;;;177      {
;;;178        bitstatus = RESET;
000010  2000              MOVS     r0,#0
                  |L2.18|
;;;179      }
;;;180      /* Return the flag status */
;;;181      return bitstatus;
;;;182    }
000012  4770              BX       lr
;;;183    
                          ENDP

                  |L2.20|
                          DCD      0x40003000

                          AREA ||i.IWDG_ReloadCounter||, CODE, READONLY, ALIGN=2

                  IWDG_ReloadCounter PROC
;;;143      */
;;;144    void IWDG_ReloadCounter(void)
000000  f64a20aa          MOV      r0,#0xaaaa
;;;145    {
;;;146      IWDG->KR = KR_KEY_Reload;
000004  4901              LDR      r1,|L3.12|
000006  6008              STR      r0,[r1,#0]
;;;147    }
000008  4770              BX       lr
;;;148    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetPrescaler||, CODE, READONLY, ALIGN=2

                  IWDG_SetPrescaler PROC
;;;117      */
;;;118    void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
000000  4901              LDR      r1,|L4.8|
;;;119    {
;;;120      /* Check the parameters */
;;;121      assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
;;;122      IWDG->PR = IWDG_Prescaler;
000002  6048              STR      r0,[r1,#4]
;;;123    }
000004  4770              BX       lr
;;;124    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetReload||, CODE, READONLY, ALIGN=2

                  IWDG_SetReload PROC
;;;130      */
;;;131    void IWDG_SetReload(uint16_t Reload)
000000  4901              LDR      r1,|L5.8|
;;;132    {
;;;133      /* Check the parameters */
;;;134      assert_param(IS_IWDG_RELOAD(Reload));
;;;135      IWDG->RLR = Reload;
000002  6088              STR      r0,[r1,#8]
;;;136    }
000004  4770              BX       lr
;;;137    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      0x40003000

                          AREA ||i.IWDG_WriteAccessCmd||, CODE, READONLY, ALIGN=2

                  IWDG_WriteAccessCmd PROC
;;;97       */
;;;98     void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
000000  4901              LDR      r1,|L6.8|
;;;99     {
;;;100      /* Check the parameters */
;;;101      assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
;;;102      IWDG->KR = IWDG_WriteAccess;
000002  6008              STR      r0,[r1,#0]
;;;103    }
000004  4770              BX       lr
;;;104    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40003000

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_iwdg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f10x_iwdg_c_15798b01____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f10x_iwdg_c_15798b01____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f10x_iwdg_c_15798b01____REVSH|
#line 128
|__asm___16_stm32f10x_iwdg_c_15798b01____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
