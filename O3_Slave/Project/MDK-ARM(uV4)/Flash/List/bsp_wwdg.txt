; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_wwdg.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_wwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\User -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User\app\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_wwdg.crf ..\..\User\bsp\src\bsp_wwdg.c]
                          THUMB

                          AREA ||i.bsp_InitWwdg||, CODE, READONLY, ALIGN=1

                  bsp_InitWwdg PROC
;;;33     */
;;;34     void bsp_InitWwdg(uint8_t _ucTreg, uint8_t _ucWreg, uint32_t WWDG_Prescaler)
000000  b5f8              PUSH     {r3-r7,lr}
;;;35     {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;36     	NVIC_InitTypeDef NVIC_InitStructure;
;;;37     	
;;;38     	/* 检测系统是否从窗口看门狗复位中恢复 */
;;;39     	if (RCC_GetFlagStatus(RCC_FLAG_WWDGRST) != RESET)
000008  207e              MOVS     r0,#0x7e
00000a  f7fffffe          BL       RCC_GetFlagStatus
00000e  b108              CBZ      r0,|L1.20|
;;;40     	{ 	
;;;41     		/* 清除复位标志 */
;;;42     		RCC_ClearFlag();
000010  f7fffffe          BL       RCC_ClearFlag
                  |L1.20|
;;;43     	}
;;;44     	else
;;;45     	{
;;;46     		/* WWDGRST 标志没有设置 */
;;;47     	}
;;;48     	
;;;49     	/* 使能WWDG时钟 */
;;;50     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE);
000014  2101              MOVS     r1,#1
000016  02c8              LSLS     r0,r1,#11
000018  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;51     	
;;;52     	/* 
;;;53     	   窗口看门狗分频设置：
;;;54     	   比如选择WWDG_Prescaler_8
;;;55     	   (PCLK1 (42MHz)/4096)/8 = 1281 Hz (~780 us)  
;;;56     	*/
;;;57     	WWDG_SetPrescaler(WWDG_Prescaler);
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       WWDG_SetPrescaler
;;;58     	
;;;59     	/* 
;;;60     	 设置窗口值是_ucWreg，用户必须在小于_ucWreg且大于0x40时刷新计数
;;;61     	 器，要不会造成系统复位。
;;;62         */
;;;63     	WWDG_SetWindowValue(_ucWreg);
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       WWDG_SetWindowValue
;;;64     	
;;;65     	/* 
;;;66     	 使能WWDG，设置计数器
;;;67     	 比如设置_ucTreg=127 8分频时，那么溢出时间就是= ~780 us * 64 = 49.92 ms 
;;;68     	 窗口看门狗的刷新时间段是: ~780 * (127-80) = 36.6ms < 刷新窗口看门狗 < ~780 * 64 = 49.9ms
;;;69     	*/
;;;70     	WWDG_Enable(_ucTreg);
000028  4630              MOV      r0,r6
00002a  f7fffffe          BL       WWDG_Enable
;;;71     	
;;;72     	/* 清除EWI中断标志 */
;;;73     	WWDG_ClearFlag();	
00002e  f7fffffe          BL       WWDG_ClearFlag
;;;74     
;;;75     	/* 使能EW中断 */
;;;76     	WWDG_EnableIT();
000032  f7fffffe          BL       WWDG_EnableIT
;;;77     
;;;78         /* 设置 WWDG 的NVIC */
;;;79     	NVIC_InitStructure.NVIC_IRQChannel = WWDG_IRQn;
000036  2000              MOVS     r0,#0
000038  f88d0000          STRB     r0,[sp,#0]
;;;80     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
00003c  f88d0001          STRB     r0,[sp,#1]
;;;81     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000040  f88d0002          STRB     r0,[sp,#2]
;;;82     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000044  2001              MOVS     r0,#1
000046  f88d0003          STRB     r0,[sp,#3]
;;;83     	NVIC_Init(&NVIC_InitStructure);	
00004a  4668              MOV      r0,sp
00004c  f7fffffe          BL       NVIC_Init
;;;84     }
000050  bdf8              POP      {r3-r7,pc}
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_wwdg.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_wwdg_c_980fee40____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_wwdg_c_980fee40____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_wwdg_c_980fee40____REVSH|
#line 128
|__asm___10_bsp_wwdg_c_980fee40____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
