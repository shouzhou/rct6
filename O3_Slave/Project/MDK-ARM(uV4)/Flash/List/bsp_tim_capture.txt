; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_tim_capture.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_tim_capture.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\User -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User\app\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_tim_capture.crf ..\..\User\bsp\src\bsp_tim_capture.c]
                          THUMB

                          AREA ||i.BASIC_TIM_Init||, CODE, READONLY, ALIGN=1

                  BASIC_TIM_Init PROC
;;;47     
;;;48     void BASIC_TIM_Init(void)
000000  b510              PUSH     {r4,lr}
;;;49     {
;;;50     	BASIC_TIM_NVIC_Config();
000002  f7fffffe          BL       BASIC_TIM_NVIC_Config
;;;51     	BASIC_TIM_Mode_Config();
000006  f7fffffe          BL       BASIC_TIM_Mode_Config
;;;52     }
00000a  bd10              POP      {r4,pc}
;;;53     
                          ENDP


                          AREA ||i.BASIC_TIM_Mode_Config||, CODE, READONLY, ALIGN=2

                  BASIC_TIM_Mode_Config PROC
;;;35     
;;;36     static void BASIC_TIM_Mode_Config(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;37     {
;;;38         TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;39         BASIC_TIM_APBxClock_FUN(BASIC_TIM_CLK, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;40         TIM_TimeBaseStructure.TIM_Period = BASIC_TIM_Period;	
00000a  f2427010          MOV      r0,#0x2710
00000e  f8ad0004          STRH     r0,[sp,#4]
;;;41         TIM_TimeBaseStructure.TIM_Prescaler= BASIC_TIM_Prescaler;
000012  2047              MOVS     r0,#0x47
000014  f8ad0000          STRH     r0,[sp,#0]
;;;42         TIM_TimeBaseInit(BASIC_TIM, &TIM_TimeBaseStructure);
000018  4669              MOV      r1,sp
00001a  4808              LDR      r0,|L2.60|
00001c  f7fffffe          BL       TIM_TimeBaseInit
;;;43         TIM_ClearFlag(BASIC_TIM, TIM_FLAG_Update);
000020  2101              MOVS     r1,#1
000022  4806              LDR      r0,|L2.60|
000024  f7fffffe          BL       TIM_ClearFlag
;;;44         TIM_ITConfig(BASIC_TIM,TIM_IT_Update,ENABLE);
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  4803              LDR      r0,|L2.60|
00002e  f7fffffe          BL       TIM_ITConfig
;;;45         TIM_Cmd(BASIC_TIM, ENABLE);	
000032  2101              MOVS     r1,#1
000034  4801              LDR      r0,|L2.60|
000036  f7fffffe          BL       TIM_Cmd
;;;46     }
00003a  bd0e              POP      {r1-r3,pc}
;;;47     
                          ENDP

                  |L2.60|
                          DCD      0x40001000

                          AREA ||i.BASIC_TIM_NVIC_Config||, CODE, READONLY, ALIGN=1

                  BASIC_TIM_NVIC_Config PROC
;;;24     // 中断优先级配置
;;;25     static void BASIC_TIM_NVIC_Config(void)
000000  b508              PUSH     {r3,lr}
;;;26     {
;;;27         NVIC_InitTypeDef NVIC_InitStructure; 
;;;28       //  NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);		
;;;29         NVIC_InitStructure.NVIC_IRQChannel = BASIC_TIM_IRQ ;	
000002  2036              MOVS     r0,#0x36
000004  f88d0000          STRB     r0,[sp,#0]
;;;30         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 6;	 
000008  2006              MOVS     r0,#6
00000a  f88d0001          STRB     r0,[sp,#1]
;;;31         //NVIC_InitStructure.NVIC_IRQChannelSubPriority = 3;	
;;;32         NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00000e  2001              MOVS     r0,#1
000010  f88d0003          STRB     r0,[sp,#3]
;;;33         NVIC_Init(&NVIC_InitStructure);
000014  4668              MOV      r0,sp
000016  f7fffffe          BL       NVIC_Init
;;;34     }
00001a  bd08              POP      {r3,pc}
;;;35     
                          ENDP


                          AREA ||i.TIM3_CAP_Init||, CODE, READONLY, ALIGN=2

                  TIM3_CAP_Init PROC
;;;67     
;;;68     void TIM3_CAP_Init(u16 arr,u16 psc)
000000  b530              PUSH     {r4,r5,lr}
;;;69     {	 
000002  b085              SUB      sp,sp,#0x14
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;70     	GPIO_InitTypeDef GPIO_InitStructure;
;;;71     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;72        	NVIC_InitTypeDef NVIC_InitStructure;
;;;73      
;;;74     	#ifndef  TIM3REMAP
;;;75         //原始配置
;;;76         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOB, ENABLE);  //使能GPIOA时钟
;;;77         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);	//使能TIM3时钟
;;;78      
;;;79         #else 
;;;80       //重映射配置  
;;;81         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);	//使能定时器3时钟
000008  2101              MOVS     r1,#1
00000a  2002              MOVS     r0,#2
00000c  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;82      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC  | RCC_APB2Periph_AFIO, ENABLE);  //使能GPIO外设和AFIO复用功能模块时钟
000010  2101              MOVS     r1,#1
000012  2011              MOVS     r0,#0x11
000014  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;83     	
;;;84     	GPIO_PinRemapConfig(GPIO_FullRemap_TIM3, ENABLE); //Timer3部分重映射  TIM3_CH2->PB5  
000018  2101              MOVS     r1,#1
00001a  4832              LDR      r0,|L4.228|
00001c  f7fffffe          BL       GPIO_PinRemapConfig
;;;85         #endif
;;;86         
;;;87       
;;;88        #ifndef TIM3REMAP    
;;;89         // 原始配置
;;;90     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_6|GPIO_Pin_7;  //PA0 清除之前设置  
;;;91     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; //P60 输入  
;;;92     	GPIO_Init(GPIOA, &GPIO_InitStructure);
;;;93         
;;;94         GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0|GPIO_Pin_1;  //PA0 清除之前设置  
;;;95     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; //P60 输入  
;;;96     	GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;97     	#else
;;;98     //  REMAP 配置 
;;;99     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_6|GPIO_Pin_7|GPIO_Pin_8|GPIO_Pin_9;  //PA0 清除之前设置  
000020  f44f7070          MOV      r0,#0x3c0
000024  f8ad0010          STRH     r0,[sp,#0x10]
;;;100    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; //P60 输入  
000028  2028              MOVS     r0,#0x28
00002a  f88d0013          STRB     r0,[sp,#0x13]
;;;101    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00002e  a904              ADD      r1,sp,#0x10
000030  482d              LDR      r0,|L4.232|
000032  f7fffffe          BL       GPIO_Init
;;;102       #endif
;;;103    
;;;104        
;;;105    	//初始化定时器5 TIM3	 
;;;106    	TIM_TimeBaseStructure.TIM_Period = arr; //设定计数器自动重装值 
000036  f8ad5008          STRH     r5,[sp,#8]
;;;107    	TIM_TimeBaseStructure.TIM_Prescaler =psc; 	//预分频器   
00003a  f8ad4004          STRH     r4,[sp,#4]
;;;108    	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //设置时钟分割:TDTS = Tck_tim
00003e  2000              MOVS     r0,#0
000040  f8ad000a          STRH     r0,[sp,#0xa]
;;;109    	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  //TIM向上计数模式
000044  f8ad0006          STRH     r0,[sp,#6]
;;;110    	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure); //根据TIM_TimeBaseInitStruct中指定的参数初始化TIMx的时间基数单位
000048  a901              ADD      r1,sp,#4
00004a  4828              LDR      r0,|L4.236|
00004c  f7fffffe          BL       TIM_TimeBaseInit
;;;111      
;;;112    	//初始化TIM3输入捕获参数
;;;113    	TIM3_ICInitStructure.TIM_Channel = TIM_Channel_1; //CC1S=01 	选择输入端 IC1映射到TI1上
000050  2000              MOVS     r0,#0
000052  4927              LDR      r1,|L4.240|
000054  8008              STRH     r0,[r1,#0]
;;;114      	TIM3_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	//上升沿捕获
000056  8048              STRH     r0,[r1,#2]
;;;115      	TIM3_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
000058  2001              MOVS     r0,#1
00005a  8088              STRH     r0,[r1,#4]
;;;116      	TIM3_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	 //配置输入分频,不分频 
00005c  2000              MOVS     r0,#0
00005e  80c8              STRH     r0,[r1,#6]
;;;117      	TIM3_ICInitStructure.TIM_ICFilter = 0x00;//IC1F=0000 配置输入滤波器 不滤波
000060  8108              STRH     r0,[r1,#8]
;;;118      	TIM_ICInit(TIM3, &TIM3_ICInitStructure);
000062  4822              LDR      r0,|L4.236|
000064  f7fffffe          BL       TIM_ICInit
;;;119        
;;;120        TIM3_ICInitStructure.TIM_Channel = TIM_Channel_2; //CC1S=01 	选择输入端 IC1映射到TI1上
000068  2004              MOVS     r0,#4
00006a  4921              LDR      r1,|L4.240|
00006c  8008              STRH     r0,[r1,#0]
;;;121      	TIM3_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	//上升沿捕获
00006e  2000              MOVS     r0,#0
000070  8048              STRH     r0,[r1,#2]
;;;122      	TIM3_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
000072  2001              MOVS     r0,#1
000074  8088              STRH     r0,[r1,#4]
;;;123      	TIM3_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	 //配置输入分频,不分频 
000076  2000              MOVS     r0,#0
000078  80c8              STRH     r0,[r1,#6]
;;;124      	TIM3_ICInitStructure.TIM_ICFilter = 0x00;//IC1F=0000 配置输入滤波器 不滤波
00007a  8108              STRH     r0,[r1,#8]
;;;125      	TIM_ICInit(TIM3, &TIM3_ICInitStructure);
00007c  481b              LDR      r0,|L4.236|
00007e  f7fffffe          BL       TIM_ICInit
;;;126        
;;;127        TIM3_ICInitStructure.TIM_Channel = TIM_Channel_3; //CC1S=01 	选择输入端 IC1映射到TI1上
000082  2008              MOVS     r0,#8
000084  491a              LDR      r1,|L4.240|
000086  8008              STRH     r0,[r1,#0]
;;;128      	TIM3_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	//上升沿捕获
000088  2000              MOVS     r0,#0
00008a  8048              STRH     r0,[r1,#2]
;;;129      	TIM3_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
00008c  2001              MOVS     r0,#1
00008e  8088              STRH     r0,[r1,#4]
;;;130      	TIM3_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	 //配置输入分频,不分频 
000090  2000              MOVS     r0,#0
000092  80c8              STRH     r0,[r1,#6]
;;;131      	TIM3_ICInitStructure.TIM_ICFilter = 0x00;//IC1F=0000 配置输入滤波器 不滤波
000094  8108              STRH     r0,[r1,#8]
;;;132      	TIM_ICInit(TIM3, &TIM3_ICInitStructure);
000096  4815              LDR      r0,|L4.236|
000098  f7fffffe          BL       TIM_ICInit
;;;133        
;;;134        TIM3_ICInitStructure.TIM_Channel = TIM_Channel_4; //CC1S=01 	选择输入端 IC1映射到TI1上
00009c  200c              MOVS     r0,#0xc
00009e  4914              LDR      r1,|L4.240|
0000a0  8008              STRH     r0,[r1,#0]
;;;135      	TIM3_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;	//上升沿捕获
0000a2  2000              MOVS     r0,#0
0000a4  8048              STRH     r0,[r1,#2]
;;;136      	TIM3_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI; //映射到TI1上
0000a6  2001              MOVS     r0,#1
0000a8  8088              STRH     r0,[r1,#4]
;;;137      	TIM3_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;	 //配置输入分频,不分频 
0000aa  2000              MOVS     r0,#0
0000ac  80c8              STRH     r0,[r1,#6]
;;;138      	TIM3_ICInitStructure.TIM_ICFilter = 0x00;//IC1F=0000 配置输入滤波器 不滤波
0000ae  8108              STRH     r0,[r1,#8]
;;;139      	TIM_ICInit(TIM3, &TIM3_ICInitStructure);
0000b0  480e              LDR      r0,|L4.236|
0000b2  f7fffffe          BL       TIM_ICInit
;;;140    	
;;;141    	//中断分组初始化
;;;142    	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;  //TIM3中断
0000b6  201d              MOVS     r0,#0x1d
0000b8  f88d0000          STRB     r0,[sp,#0]
;;;143    	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 4;  //先占优先级2级
0000bc  2004              MOVS     r0,#4
0000be  f88d0001          STRB     r0,[sp,#1]
;;;144    	//NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;  //从优先级0级
;;;145    	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //IRQ通道被使能
0000c2  2001              MOVS     r0,#1
0000c4  f88d0003          STRB     r0,[sp,#3]
;;;146    	NVIC_Init(&NVIC_InitStructure);  //根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器 
0000c8  4668              MOV      r0,sp
0000ca  f7fffffe          BL       NVIC_Init
;;;147    	
;;;148    	TIM_ITConfig(TIM3,TIM_IT_Update|TIM_IT_CC1|TIM_IT_CC2|TIM_IT_CC3|TIM_IT_CC4,ENABLE);//允许更新中断 ,允许CC1IE捕获中断	
0000ce  2201              MOVS     r2,#1
0000d0  211f              MOVS     r1,#0x1f
0000d2  4806              LDR      r0,|L4.236|
0000d4  f7fffffe          BL       TIM_ITConfig
;;;149    	
;;;150       	TIM_Cmd(TIM3,ENABLE ); 	//使能定时器5
0000d8  2101              MOVS     r1,#1
0000da  4804              LDR      r0,|L4.236|
0000dc  f7fffffe          BL       TIM_Cmd
;;;151       
;;;152    
;;;153    
;;;154    }
0000e0  b005              ADD      sp,sp,#0x14
0000e2  bd30              POP      {r4,r5,pc}
;;;155    
                          ENDP

                  |L4.228|
                          DCD      0x001a0c00
                  |L4.232|
                          DCD      0x40011000
                  |L4.236|
                          DCD      0x40000400
                  |L4.240|
                          DCD      TIM3_ICInitStructure

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;161    //定时器5中断服务程序	 
;;;162    void TIM3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;163    { 
;;;164       //通道一
;;;165     	if((CAPTURE_STA_TIM3CH[0]&0X80)==0)//还未成功捕获	
000002  48ca              LDR      r0,|L5.812|
000004  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
000006  f0000080          AND      r0,r0,#0x80
00000a  2800              CMP      r0,#0
00000c  d15d              BNE      |L5.202|
;;;166    	{	 
;;;167    		if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
00000e  2101              MOVS     r1,#1
000010  48c7              LDR      r0,|L5.816|
000012  f7fffffe          BL       TIM_GetITStatus
000016  b1d0              CBZ      r0,|L5.78|
;;;168    		{	
;;;169            	if(CAPTURE_STA_TIM3CH[0]&0X40)//已经捕获到高电平了
000018  48c4              LDR      r0,|L5.812|
00001a  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
00001c  f0000040          AND      r0,r0,#0x40
000020  b1a8              CBZ      r0,|L5.78|
;;;170    			{
;;;171    				if((CAPTURE_STA_TIM3CH[0]&0X3F)==0X3F)//高电平太长了
000022  48c2              LDR      r0,|L5.812|
000024  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
000026  f000003f          AND      r0,r0,#0x3f
00002a  283f              CMP      r0,#0x3f
00002c  d10a              BNE      |L5.68|
;;;172    				{
;;;173    					CAPTURE_STA_TIM3CH[0]|=0X80;//标记成功捕获了一次
00002e  48bf              LDR      r0,|L5.812|
000030  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
000032  f0400080          ORR      r0,r0,#0x80
000036  49bd              LDR      r1,|L5.812|
000038  7008              STRB     r0,[r1,#0]
;;;174    					CAPTURE_VAL_TIM3CH[0]=0XFFFF;
00003a  f64f70ff          MOV      r0,#0xffff
00003e  49bd              LDR      r1,|L5.820|
000040  8008              STRH     r0,[r1,#0]
000042  e004              B        |L5.78|
                  |L5.68|
;;;175    				}else CAPTURE_STA_TIM3CH[0]++;
000044  48b9              LDR      r0,|L5.812|
000046  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
000048  1c40              ADDS     r0,r0,#1
00004a  49b8              LDR      r1,|L5.812|
00004c  7008              STRB     r0,[r1,#0]
                  |L5.78|
;;;176    			}	 
;;;177    		}
;;;178    	if (TIM_GetITStatus(TIM3, TIM_IT_CC1) != RESET)//捕获1发生捕获事件
00004e  2102              MOVS     r1,#2
000050  48b7              LDR      r0,|L5.816|
000052  f7fffffe          BL       TIM_GetITStatus
000056  b338              CBZ      r0,|L5.168|
;;;179    		{
;;;180              
;;;181    			if(CAPTURE_STA_TIM3CH[0]&0X40)		//捕获到一个下降沿 		
000058  48b4              LDR      r0,|L5.812|
00005a  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
00005c  f0000040          AND      r0,r0,#0x40
000060  b318              CBZ      r0,|L5.170|
;;;182    			{	  			
;;;183    				CAPTURE_STA_TIM3CH[0] |= 0x80;                    //标记成功捕获到一次高电平脉宽
000062  48b2              LDR      r0,|L5.812|
000064  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
000066  f0400080          ORR      r0,r0,#0x80
00006a  49b0              LDR      r1,|L5.812|
00006c  7008              STRB     r0,[r1,#0]
;;;184                    CAPTURE_DOWN_TIM3CH[0] = TIM_GetCapture1(TIM3);
00006e  48b0              LDR      r0,|L5.816|
000070  f7fffffe          BL       TIM_GetCapture1
000074  49b0              LDR      r1,|L5.824|
000076  8008              STRH     r0,[r1,#0]
;;;185                    if(CAPTURE_DOWN_TIM3CH[0] >= CAPTURE_UP_TIM3CH[0]) 
000078  4608              MOV      r0,r1
00007a  8800              LDRH     r0,[r0,#0]  ; CAPTURE_DOWN_TIM3CH
00007c  49af              LDR      r1,|L5.828|
00007e  8809              LDRH     r1,[r1,#0]  ; CAPTURE_UP_TIM3CH
000080  4288              CMP      r0,r1
000082  db07              BLT      |L5.148|
;;;186                        CAPTURE_VAL_TIM3CH[0] = CAPTURE_DOWN_TIM3CH[0] - CAPTURE_UP_TIM3CH[0];
000084  48ac              LDR      r0,|L5.824|
000086  8800              LDRH     r0,[r0,#0]  ; CAPTURE_DOWN_TIM3CH
000088  49ac              LDR      r1,|L5.828|
00008a  8809              LDRH     r1,[r1,#0]  ; CAPTURE_UP_TIM3CH
00008c  1a40              SUBS     r0,r0,r1
00008e  49a9              LDR      r1,|L5.820|
000090  8008              STRH     r0,[r1,#0]
000092  e01a              B        |L5.202|
                  |L5.148|
;;;187                    else 
;;;188                        CAPTURE_VAL_TIM3CH[0] = 0xffff + CAPTURE_DOWN_TIM3CH[0] - CAPTURE_UP_TIM3CH[0];
000094  48a8              LDR      r0,|L5.824|
000096  8800              LDRH     r0,[r0,#0]  ; CAPTURE_DOWN_TIM3CH
000098  f64f71ff          MOV      r1,#0xffff
00009c  4408              ADD      r0,r0,r1
00009e  49a7              LDR      r1,|L5.828|
0000a0  8809              LDRH     r1,[r1,#0]  ; CAPTURE_UP_TIM3CH
0000a2  1a40              SUBS     r0,r0,r1
0000a4  49a3              LDR      r1,|L5.820|
0000a6  8008              STRH     r0,[r1,#0]
                  |L5.168|
0000a8  e00f              B        |L5.202|
                  |L5.170|
;;;189    		   	//	TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
;;;190    			}else  								//还未开始,第一次捕获上升沿
;;;191    			{
;;;192    				CAPTURE_STA_TIM3CH[0]=0;			//清空
0000aa  2000              MOVS     r0,#0
0000ac  499f              LDR      r1,|L5.812|
0000ae  7008              STRB     r0,[r1,#0]
;;;193    				CAPTURE_VAL_TIM3CH[0]=0;
0000b0  49a0              LDR      r1,|L5.820|
0000b2  8008              STRH     r0,[r1,#0]
;;;194    	 			CAPTURE_UP_TIM3CH[0] = TIM_GetCapture1(TIM3);
0000b4  489e              LDR      r0,|L5.816|
0000b6  f7fffffe          BL       TIM_GetCapture1
0000ba  49a0              LDR      r1,|L5.828|
0000bc  8008              STRH     r0,[r1,#0]
;;;195    				CAPTURE_STA_TIM3CH[0]|=0X40;		//标记捕获到了上升沿
0000be  489b              LDR      r0,|L5.812|
0000c0  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
0000c2  f0400040          ORR      r0,r0,#0x40
0000c6  4999              LDR      r1,|L5.812|
0000c8  7008              STRB     r0,[r1,#0]
                  |L5.202|
;;;196    		   	//	TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
;;;197    			}		    
;;;198    		}			     	    					   
;;;199     	}
;;;200        //通道二  
;;;201       if((CAPTURE_STA_TIM3CH[1]&0X80)==0)//还未成功捕获	
0000ca  4898              LDR      r0,|L5.812|
0000cc  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
0000ce  f0000080          AND      r0,r0,#0x80
0000d2  2800              CMP      r0,#0
0000d4  d15d              BNE      |L5.402|
;;;202    	{	 
;;;203    		if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
0000d6  2101              MOVS     r1,#1
0000d8  4895              LDR      r0,|L5.816|
0000da  f7fffffe          BL       TIM_GetITStatus
0000de  b1d0              CBZ      r0,|L5.278|
;;;204    		{	
;;;205            	if(CAPTURE_STA_TIM3CH[1]&0X40)//已经捕获到高电平了
0000e0  4892              LDR      r0,|L5.812|
0000e2  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
0000e4  f0000040          AND      r0,r0,#0x40
0000e8  b1a8              CBZ      r0,|L5.278|
;;;206    			{
;;;207    				if((CAPTURE_STA_TIM3CH[1]&0X3F)==0X3F)//高电平太长了
0000ea  4890              LDR      r0,|L5.812|
0000ec  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
0000ee  f000003f          AND      r0,r0,#0x3f
0000f2  283f              CMP      r0,#0x3f
0000f4  d10a              BNE      |L5.268|
;;;208    				{
;;;209    					CAPTURE_STA_TIM3CH[1]|=0X80;//标记成功捕获了一次
0000f6  488d              LDR      r0,|L5.812|
0000f8  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
0000fa  f0400080          ORR      r0,r0,#0x80
0000fe  498b              LDR      r1,|L5.812|
000100  7048              STRB     r0,[r1,#1]
;;;210    					CAPTURE_VAL_TIM3CH[1]=0XFFFF;
000102  f64f70ff          MOV      r0,#0xffff
000106  498b              LDR      r1,|L5.820|
000108  8048              STRH     r0,[r1,#2]
00010a  e004              B        |L5.278|
                  |L5.268|
;;;211    				}else CAPTURE_STA_TIM3CH[1]++;
00010c  4887              LDR      r0,|L5.812|
00010e  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
000110  1c40              ADDS     r0,r0,#1
000112  4986              LDR      r1,|L5.812|
000114  7048              STRB     r0,[r1,#1]
                  |L5.278|
;;;212    			}	 
;;;213    		}
;;;214    	if (TIM_GetITStatus(TIM3, TIM_IT_CC2) != RESET)//捕获1发生捕获事件
000116  2104              MOVS     r1,#4
000118  4885              LDR      r0,|L5.816|
00011a  f7fffffe          BL       TIM_GetITStatus
00011e  b338              CBZ      r0,|L5.368|
;;;215    		{
;;;216              
;;;217    			if(CAPTURE_STA_TIM3CH[1]&0X40)		//捕获到一个下降沿 		
000120  4882              LDR      r0,|L5.812|
000122  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
000124  f0000040          AND      r0,r0,#0x40
000128  b318              CBZ      r0,|L5.370|
;;;218    			{	  			
;;;219    				CAPTURE_STA_TIM3CH[1] |= 0x80;                    //标记成功捕获到一次高电平脉宽
00012a  4880              LDR      r0,|L5.812|
00012c  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
00012e  f0400080          ORR      r0,r0,#0x80
000132  497e              LDR      r1,|L5.812|
000134  7048              STRB     r0,[r1,#1]
;;;220                    CAPTURE_DOWN_TIM3CH[1] = TIM_GetCapture2(TIM3);
000136  487e              LDR      r0,|L5.816|
000138  f7fffffe          BL       TIM_GetCapture2
00013c  497e              LDR      r1,|L5.824|
00013e  8048              STRH     r0,[r1,#2]
;;;221                    if(CAPTURE_DOWN_TIM3CH[1] >= CAPTURE_UP_TIM3CH[1]) 
000140  4608              MOV      r0,r1
000142  8840              LDRH     r0,[r0,#2]  ; CAPTURE_DOWN_TIM3CH
000144  497d              LDR      r1,|L5.828|
000146  8849              LDRH     r1,[r1,#2]  ; CAPTURE_UP_TIM3CH
000148  4288              CMP      r0,r1
00014a  db07              BLT      |L5.348|
;;;222                        CAPTURE_VAL_TIM3CH[1] = CAPTURE_DOWN_TIM3CH[1] - CAPTURE_UP_TIM3CH[1];
00014c  487a              LDR      r0,|L5.824|
00014e  8840              LDRH     r0,[r0,#2]  ; CAPTURE_DOWN_TIM3CH
000150  497a              LDR      r1,|L5.828|
000152  8849              LDRH     r1,[r1,#2]  ; CAPTURE_UP_TIM3CH
000154  1a40              SUBS     r0,r0,r1
000156  4977              LDR      r1,|L5.820|
000158  8048              STRH     r0,[r1,#2]
00015a  e01a              B        |L5.402|
                  |L5.348|
;;;223                    else 
;;;224                        CAPTURE_VAL_TIM3CH[1] = 0xffff + CAPTURE_DOWN_TIM3CH[1] - CAPTURE_UP_TIM3CH[1];
00015c  4876              LDR      r0,|L5.824|
00015e  8840              LDRH     r0,[r0,#2]  ; CAPTURE_DOWN_TIM3CH
000160  f64f71ff          MOV      r1,#0xffff
000164  4408              ADD      r0,r0,r1
000166  4975              LDR      r1,|L5.828|
000168  8849              LDRH     r1,[r1,#2]  ; CAPTURE_UP_TIM3CH
00016a  1a40              SUBS     r0,r0,r1
00016c  4971              LDR      r1,|L5.820|
00016e  8048              STRH     r0,[r1,#2]
                  |L5.368|
000170  e00f              B        |L5.402|
                  |L5.370|
;;;225    		   	//	TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
;;;226    			}else  								//还未开始,第一次捕获上升沿
;;;227    			{
;;;228    				CAPTURE_STA_TIM3CH[1]=0;			//清空
000172  2000              MOVS     r0,#0
000174  496d              LDR      r1,|L5.812|
000176  7048              STRB     r0,[r1,#1]
;;;229    				CAPTURE_VAL_TIM3CH[1]=0;
000178  496e              LDR      r1,|L5.820|
00017a  8048              STRH     r0,[r1,#2]
;;;230    	 			CAPTURE_UP_TIM3CH[1] = TIM_GetCapture2(TIM3);
00017c  486c              LDR      r0,|L5.816|
00017e  f7fffffe          BL       TIM_GetCapture2
000182  496e              LDR      r1,|L5.828|
000184  8048              STRH     r0,[r1,#2]
;;;231    				CAPTURE_STA_TIM3CH[1]|=0X40;		//标记捕获到了上升沿
000186  4869              LDR      r0,|L5.812|
000188  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
00018a  f0400040          ORR      r0,r0,#0x40
00018e  4967              LDR      r1,|L5.812|
000190  7048              STRB     r0,[r1,#1]
                  |L5.402|
;;;232    		   	//	TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
;;;233    			}		    
;;;234    		}			     	    					   
;;;235     	}
;;;236        
;;;237        //通道三
;;;238     	if((CAPTURE_STA_TIM3CH[2]&0X80)==0)//还未成功捕获	
000192  4866              LDR      r0,|L5.812|
000194  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
000196  f0000080          AND      r0,r0,#0x80
00019a  2800              CMP      r0,#0
00019c  d15d              BNE      |L5.602|
;;;239    	{	 
;;;240    		if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
00019e  2101              MOVS     r1,#1
0001a0  4863              LDR      r0,|L5.816|
0001a2  f7fffffe          BL       TIM_GetITStatus
0001a6  b1d0              CBZ      r0,|L5.478|
;;;241    		{	
;;;242            	if(CAPTURE_STA_TIM3CH[2]&0X40)//已经捕获到高电平了
0001a8  4860              LDR      r0,|L5.812|
0001aa  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
0001ac  f0000040          AND      r0,r0,#0x40
0001b0  b1a8              CBZ      r0,|L5.478|
;;;243    			{
;;;244    				if((CAPTURE_STA_TIM3CH[2]&0X3F)==0X3F)//高电平太长了
0001b2  485e              LDR      r0,|L5.812|
0001b4  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
0001b6  f000003f          AND      r0,r0,#0x3f
0001ba  283f              CMP      r0,#0x3f
0001bc  d10a              BNE      |L5.468|
;;;245    				{
;;;246    					CAPTURE_STA_TIM3CH[2]|=0X80;//标记成功捕获了一次
0001be  485b              LDR      r0,|L5.812|
0001c0  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
0001c2  f0400080          ORR      r0,r0,#0x80
0001c6  4959              LDR      r1,|L5.812|
0001c8  7088              STRB     r0,[r1,#2]
;;;247    					CAPTURE_VAL_TIM3CH[2]=0XFFFF;
0001ca  f64f70ff          MOV      r0,#0xffff
0001ce  4959              LDR      r1,|L5.820|
0001d0  8088              STRH     r0,[r1,#4]
0001d2  e004              B        |L5.478|
                  |L5.468|
;;;248    				}else CAPTURE_STA_TIM3CH[2]++;
0001d4  4855              LDR      r0,|L5.812|
0001d6  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
0001d8  1c40              ADDS     r0,r0,#1
0001da  4954              LDR      r1,|L5.812|
0001dc  7088              STRB     r0,[r1,#2]
                  |L5.478|
;;;249    			}	 
;;;250    		}
;;;251    	if (TIM_GetITStatus(TIM3, TIM_IT_CC3) != RESET)//捕获1发生捕获事件
0001de  2108              MOVS     r1,#8
0001e0  4853              LDR      r0,|L5.816|
0001e2  f7fffffe          BL       TIM_GetITStatus
0001e6  b338              CBZ      r0,|L5.568|
;;;252    		{
;;;253              
;;;254    			if(CAPTURE_STA_TIM3CH[2]&0X40)		//捕获到一个下降沿 		
0001e8  4850              LDR      r0,|L5.812|
0001ea  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
0001ec  f0000040          AND      r0,r0,#0x40
0001f0  b318              CBZ      r0,|L5.570|
;;;255    			{	  			
;;;256    				CAPTURE_STA_TIM3CH[2] |= 0x80;                    //标记成功捕获到一次高电平脉宽
0001f2  484e              LDR      r0,|L5.812|
0001f4  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
0001f6  f0400080          ORR      r0,r0,#0x80
0001fa  494c              LDR      r1,|L5.812|
0001fc  7088              STRB     r0,[r1,#2]
;;;257                    CAPTURE_DOWN_TIM3CH[2] = TIM_GetCapture3(TIM3);
0001fe  484c              LDR      r0,|L5.816|
000200  f7fffffe          BL       TIM_GetCapture3
000204  494c              LDR      r1,|L5.824|
000206  8088              STRH     r0,[r1,#4]
;;;258                    if(CAPTURE_DOWN_TIM3CH[2] >= CAPTURE_UP_TIM3CH[2]) 
000208  4608              MOV      r0,r1
00020a  8880              LDRH     r0,[r0,#4]  ; CAPTURE_DOWN_TIM3CH
00020c  494b              LDR      r1,|L5.828|
00020e  8889              LDRH     r1,[r1,#4]  ; CAPTURE_UP_TIM3CH
000210  4288              CMP      r0,r1
000212  db07              BLT      |L5.548|
;;;259                        CAPTURE_VAL_TIM3CH[2] = CAPTURE_DOWN_TIM3CH[2] - CAPTURE_UP_TIM3CH[2];
000214  4848              LDR      r0,|L5.824|
000216  8880              LDRH     r0,[r0,#4]  ; CAPTURE_DOWN_TIM3CH
000218  4948              LDR      r1,|L5.828|
00021a  8889              LDRH     r1,[r1,#4]  ; CAPTURE_UP_TIM3CH
00021c  1a40              SUBS     r0,r0,r1
00021e  4945              LDR      r1,|L5.820|
000220  8088              STRH     r0,[r1,#4]
000222  e01a              B        |L5.602|
                  |L5.548|
;;;260                    else 
;;;261                        CAPTURE_VAL_TIM3CH[2] = 0xffff + CAPTURE_DOWN_TIM3CH[2] - CAPTURE_UP_TIM3CH[0];
000224  4844              LDR      r0,|L5.824|
000226  8880              LDRH     r0,[r0,#4]  ; CAPTURE_DOWN_TIM3CH
000228  f64f71ff          MOV      r1,#0xffff
00022c  4408              ADD      r0,r0,r1
00022e  4943              LDR      r1,|L5.828|
000230  8809              LDRH     r1,[r1,#0]  ; CAPTURE_UP_TIM3CH
000232  1a40              SUBS     r0,r0,r1
000234  493f              LDR      r1,|L5.820|
000236  8088              STRH     r0,[r1,#4]
                  |L5.568|
000238  e00f              B        |L5.602|
                  |L5.570|
;;;262    		   	//	TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
;;;263    			}else  								//还未开始,第一次捕获上升沿
;;;264    			{
;;;265    				CAPTURE_STA_TIM3CH[2]=0;			//清空
00023a  2000              MOVS     r0,#0
00023c  493b              LDR      r1,|L5.812|
00023e  7088              STRB     r0,[r1,#2]
;;;266    				CAPTURE_VAL_TIM3CH[2]=0;
000240  493c              LDR      r1,|L5.820|
000242  8088              STRH     r0,[r1,#4]
;;;267    	 			CAPTURE_UP_TIM3CH[2] = TIM_GetCapture3(TIM3);
000244  483a              LDR      r0,|L5.816|
000246  f7fffffe          BL       TIM_GetCapture3
00024a  493c              LDR      r1,|L5.828|
00024c  8088              STRH     r0,[r1,#4]
;;;268    				CAPTURE_STA_TIM3CH[2]|=0X40;		//标记捕获到了上升沿
00024e  4837              LDR      r0,|L5.812|
000250  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
000252  f0400040          ORR      r0,r0,#0x40
000256  4935              LDR      r1,|L5.812|
000258  7088              STRB     r0,[r1,#2]
                  |L5.602|
;;;269    		   	//	TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
;;;270    			}		    
;;;271    		}			     	    					   
;;;272     	}
;;;273        
;;;274        //通道四
;;;275     	if((CAPTURE_STA_TIM3CH[3]&0X80)==0)//还未成功捕获	
00025a  4834              LDR      r0,|L5.812|
00025c  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
00025e  f0000080          AND      r0,r0,#0x80
000262  2800              CMP      r0,#0
000264  d15d              BNE      |L5.802|
;;;276    	{	 
;;;277    		if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
000266  2101              MOVS     r1,#1
000268  4831              LDR      r0,|L5.816|
00026a  f7fffffe          BL       TIM_GetITStatus
00026e  b1d0              CBZ      r0,|L5.678|
;;;278    		{	
;;;279            	if(CAPTURE_STA_TIM3CH[3]&0X40)//已经捕获到高电平了
000270  482e              LDR      r0,|L5.812|
000272  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
000274  f0000040          AND      r0,r0,#0x40
000278  b1a8              CBZ      r0,|L5.678|
;;;280    			{
;;;281    				if((CAPTURE_STA_TIM3CH[3]&0X3F)==0X3F)//高电平太长了
00027a  482c              LDR      r0,|L5.812|
00027c  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
00027e  f000003f          AND      r0,r0,#0x3f
000282  283f              CMP      r0,#0x3f
000284  d10a              BNE      |L5.668|
;;;282    				{
;;;283    					CAPTURE_STA_TIM3CH[3]|=0X80;//标记成功捕获了一次
000286  4829              LDR      r0,|L5.812|
000288  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
00028a  f0400080          ORR      r0,r0,#0x80
00028e  4927              LDR      r1,|L5.812|
000290  70c8              STRB     r0,[r1,#3]
;;;284    					CAPTURE_VAL_TIM3CH[3]=0XFFFF;
000292  f64f70ff          MOV      r0,#0xffff
000296  4927              LDR      r1,|L5.820|
000298  80c8              STRH     r0,[r1,#6]
00029a  e004              B        |L5.678|
                  |L5.668|
;;;285    				}else CAPTURE_STA_TIM3CH[3]++;
00029c  4823              LDR      r0,|L5.812|
00029e  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
0002a0  1c40              ADDS     r0,r0,#1
0002a2  4922              LDR      r1,|L5.812|
0002a4  70c8              STRB     r0,[r1,#3]
                  |L5.678|
;;;286    			}	 
;;;287    		}
;;;288    	if (TIM_GetITStatus(TIM3, TIM_IT_CC4) != RESET)//捕获1发生捕获事件
0002a6  2110              MOVS     r1,#0x10
0002a8  4821              LDR      r0,|L5.816|
0002aa  f7fffffe          BL       TIM_GetITStatus
0002ae  b338              CBZ      r0,|L5.768|
;;;289    		{
;;;290              
;;;291    			if(CAPTURE_STA_TIM3CH[3]&0X40)		//捕获到一个下降沿 		
0002b0  481e              LDR      r0,|L5.812|
0002b2  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
0002b4  f0000040          AND      r0,r0,#0x40
0002b8  b318              CBZ      r0,|L5.770|
;;;292    			{	  			
;;;293    				CAPTURE_STA_TIM3CH[3] |= 0x80;                    //标记成功捕获到一次高电平脉宽
0002ba  481c              LDR      r0,|L5.812|
0002bc  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
0002be  f0400080          ORR      r0,r0,#0x80
0002c2  491a              LDR      r1,|L5.812|
0002c4  70c8              STRB     r0,[r1,#3]
;;;294                    CAPTURE_DOWN_TIM3CH[3] = TIM_GetCapture4(TIM3);
0002c6  481a              LDR      r0,|L5.816|
0002c8  f7fffffe          BL       TIM_GetCapture4
0002cc  491a              LDR      r1,|L5.824|
0002ce  80c8              STRH     r0,[r1,#6]
;;;295                    if(CAPTURE_DOWN_TIM3CH[3] >= CAPTURE_UP_TIM3CH[3]) 
0002d0  4608              MOV      r0,r1
0002d2  88c0              LDRH     r0,[r0,#6]  ; CAPTURE_DOWN_TIM3CH
0002d4  4919              LDR      r1,|L5.828|
0002d6  88c9              LDRH     r1,[r1,#6]  ; CAPTURE_UP_TIM3CH
0002d8  4288              CMP      r0,r1
0002da  db07              BLT      |L5.748|
;;;296                        CAPTURE_VAL_TIM3CH[3] = CAPTURE_DOWN_TIM3CH[3] - CAPTURE_UP_TIM3CH[3];
0002dc  4816              LDR      r0,|L5.824|
0002de  88c0              LDRH     r0,[r0,#6]  ; CAPTURE_DOWN_TIM3CH
0002e0  4916              LDR      r1,|L5.828|
0002e2  88c9              LDRH     r1,[r1,#6]  ; CAPTURE_UP_TIM3CH
0002e4  1a40              SUBS     r0,r0,r1
0002e6  4913              LDR      r1,|L5.820|
0002e8  80c8              STRH     r0,[r1,#6]
0002ea  e01a              B        |L5.802|
                  |L5.748|
;;;297                    else 
;;;298                        CAPTURE_VAL_TIM3CH[3] = 0xffff + CAPTURE_DOWN_TIM3CH[3] - CAPTURE_UP_TIM3CH[3];
0002ec  4812              LDR      r0,|L5.824|
0002ee  88c0              LDRH     r0,[r0,#6]  ; CAPTURE_DOWN_TIM3CH
0002f0  f64f71ff          MOV      r1,#0xffff
0002f4  4408              ADD      r0,r0,r1
0002f6  4911              LDR      r1,|L5.828|
0002f8  88c9              LDRH     r1,[r1,#6]  ; CAPTURE_UP_TIM3CH
0002fa  1a40              SUBS     r0,r0,r1
0002fc  490d              LDR      r1,|L5.820|
0002fe  80c8              STRH     r0,[r1,#6]
                  |L5.768|
000300  e00f              B        |L5.802|
                  |L5.770|
;;;299    		   	//	TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Rising); //CC1P=0 设置为上升沿捕获
;;;300    			}else  								//还未开始,第一次捕获上升沿
;;;301    			{
;;;302    				CAPTURE_STA_TIM3CH[3]=0;			//清空
000302  2000              MOVS     r0,#0
000304  4909              LDR      r1,|L5.812|
000306  70c8              STRB     r0,[r1,#3]
;;;303    				CAPTURE_VAL_TIM3CH[3]=0;
000308  490a              LDR      r1,|L5.820|
00030a  80c8              STRH     r0,[r1,#6]
;;;304    	 			CAPTURE_UP_TIM3CH[3] = TIM_GetCapture4(TIM3);
00030c  4808              LDR      r0,|L5.816|
00030e  f7fffffe          BL       TIM_GetCapture4
000312  490a              LDR      r1,|L5.828|
000314  80c8              STRH     r0,[r1,#6]
;;;305    				CAPTURE_STA_TIM3CH[3]|=0X40;		//标记捕获到了上升沿
000316  4805              LDR      r0,|L5.812|
000318  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
00031a  f0400040          ORR      r0,r0,#0x40
00031e  4903              LDR      r1,|L5.812|
000320  70c8              STRB     r0,[r1,#3]
                  |L5.802|
;;;306    		   	//	TIM_OC1PolarityConfig(TIM3,TIM_ICPolarity_Falling);		//CC1P=1 设置为下降沿捕获
;;;307    			}		    
;;;308    		}			     	    					   
;;;309     	}
;;;310     
;;;311        TIM_ClearITPendingBit(TIM3, TIM_IT_CC1|TIM_IT_CC2|TIM_IT_CC3|TIM_IT_CC4|TIM_IT_Update); //清除中断标志位
000322  211f              MOVS     r1,#0x1f
000324  4802              LDR      r0,|L5.816|
000326  f7fffffe          BL       TIM_ClearITPendingBit
;;;312     
;;;313    }
00032a  bd10              POP      {r4,pc}
;;;314    
                          ENDP

                  |L5.812|
                          DCD      CAPTURE_STA_TIM3CH
                  |L5.816|
                          DCD      0x40000400
                  |L5.820|
                          DCD      CAPTURE_VAL_TIM3CH
                  |L5.824|
                          DCD      CAPTURE_DOWN_TIM3CH
                  |L5.828|
                          DCD      CAPTURE_UP_TIM3CH

                          AREA ||i.TIM6_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM6_IRQHandler PROC
;;;7      uint8_t  secondflag =0;
;;;8      void  BASIC_TIM_IRQHandler (void)  //about  10ms  period
000000  b510              PUSH     {r4,lr}
;;;9      {
;;;10     	if ( TIM_GetITStatus( BASIC_TIM, TIM_IT_Update) != RESET ) 
000002  2101              MOVS     r1,#1
000004  480b              LDR      r0,|L6.52|
000006  f7fffffe          BL       TIM_GetITStatus
00000a  b188              CBZ      r0,|L6.48|
;;;11     	{	
;;;12             count++;
00000c  480a              LDR      r0,|L6.56|
00000e  8800              LDRH     r0,[r0,#0]  ; count
000010  1c40              ADDS     r0,r0,#1
000012  4909              LDR      r1,|L6.56|
000014  8008              STRH     r0,[r1,#0]
;;;13      
;;;14             if(count ==100)
000016  4608              MOV      r0,r1
000018  8800              LDRH     r0,[r0,#0]  ; count
00001a  2864              CMP      r0,#0x64
00001c  d104              BNE      |L6.40|
;;;15             {
;;;16                 count =0;
00001e  2000              MOVS     r0,#0
000020  8008              STRH     r0,[r1,#0]
;;;17                 secondflag =1;
000022  2001              MOVS     r0,#1
000024  4905              LDR      r1,|L6.60|
000026  7008              STRB     r0,[r1,#0]
                  |L6.40|
;;;18             }
;;;19         
;;;20      
;;;21     		TIM_ClearITPendingBit(BASIC_TIM , TIM_FLAG_Update);  		 
000028  2101              MOVS     r1,#1
00002a  4802              LDR      r0,|L6.52|
00002c  f7fffffe          BL       TIM_ClearITPendingBit
                  |L6.48|
;;;22     	}		 	
;;;23     }
000030  bd10              POP      {r4,pc}
;;;24     // 中断优先级配置
                          ENDP

000032  0000              DCW      0x0000
                  |L6.52|
                          DCD      0x40001000
                  |L6.56|
                          DCD      count
                  |L6.60|
                          DCD      secondflag

                          AREA ||i.tim_print_result||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_f
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_fp_dec
                  tim_print_result PROC
;;;314    
;;;315    void tim_print_result(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;316    {
;;;317        uint16_t temp=0;
000004  2400              MOVS     r4,#0
;;;318        float fre = 0.0;
000006  46a1              MOV      r9,r4
;;;319        //static uin8_t frestopflag =0x00 ; //没有采集到数据的标志，
;;;320        #ifdef USEDEBUG
;;;321        //printf("in tim print test\r\n");
;;;322        #endif
;;;323     
;;;324        if(CAPTURE_STA_TIM3CH[0]&0X80)//成功捕获到了一次上升沿
000008  4890              LDR      r0,|L7.588|
00000a  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
00000c  f0000080          AND      r0,r0,#0x80
000010  2800              CMP      r0,#0
000012  d041              BEQ      |L7.152|
;;;325    		{
;;;326                temp = 0;
000014  bf00              NOP      
;;;327    			temp=CAPTURE_STA_TIM3CH[0]&0X3F;
000016  488d              LDR      r0,|L7.588|
000018  7800              LDRB     r0,[r0,#0]  ; CAPTURE_STA_TIM3CH
00001a  f000043f          AND      r4,r0,#0x3f
;;;328    			temp*=65536;//溢出时间总和
00001e  f64f70ff          MOV      r0,#0xffff
000022  ea004404          AND      r4,r0,r4,LSL #16
;;;329    			temp+=CAPTURE_VAL_TIM3CH[0];//得到总的高电平时间
000026  488a              LDR      r0,|L7.592|
000028  8800              LDRH     r0,[r0,#0]  ; CAPTURE_VAL_TIM3CH
00002a  4420              ADD      r0,r0,r4
00002c  b284              UXTH     r4,r0
;;;330    			//bsp_Diwen_Updatedata(0x000A,10000/temp);  
;;;331                #ifdef USEDEBUG
;;;332                printf("通道1 :HIGH:%d us  FREQUENCE :%4.2fKHz\r\n",temp,1000.0/(float)temp);	//打印总的高点平时间
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       __aeabi_ui2f
000034  4682              MOV      r10,r0
000036  f7fffffe          BL       __aeabi_f2d
00003a  4607              MOV      r7,r0
00003c  463a              MOV      r2,r7
00003e  460b              MOV      r3,r1
000040  2000              MOVS     r0,#0
000042  4984              LDR      r1,|L7.596|
000044  f7fffffe          BL       __aeabi_ddiv
000048  4605              MOV      r5,r0
00004a  462a              MOV      r2,r5
00004c  460b              MOV      r3,r1
00004e  4621              MOV      r1,r4
000050  a081              ADR      r0,|L7.600|
000052  f7fffffe          BL       __2printf
;;;333                #endif
;;;334    			CAPTURE_STA_TIM3CH[0]=0;//开启下一次捕获 
000056  2000              MOVS     r0,#0
000058  497c              LDR      r1,|L7.588|
00005a  7008              STRB     r0,[r1,#0]
;;;335                fre = 1000.0/temp;
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       __aeabi_ui2d
000062  4607              MOV      r7,r0
000064  463a              MOV      r2,r7
000066  460b              MOV      r3,r1
000068  2000              MOVS     r0,#0
00006a  497a              LDR      r1,|L7.596|
00006c  f7fffffe          BL       __aeabi_ddiv
000070  4605              MOV      r5,r0
000072  f7fffffe          BL       __aeabi_d2f
000076  4681              MOV      r9,r0
;;;336                if((fre>=CHECKFRELOW) &&(fre<=CHECKFREHIGH))  g_checkfreok[0]++;
000078  f04f4182          MOV      r1,#0x41000000
00007c  4648              MOV      r0,r9
00007e  f7fffffe          BL       __aeabi_cfrcmple
000082  d809              BHI      |L7.152|
000084  497f              LDR      r1,|L7.644|
000086  4648              MOV      r0,r9
000088  f7fffffe          BL       __aeabi_cfcmple
00008c  d804              BHI      |L7.152|
00008e  487e              LDR      r0,|L7.648|
000090  7800              LDRB     r0,[r0,#0]  ; g_checkfreok
000092  1c40              ADDS     r0,r0,#1
000094  497c              LDR      r1,|L7.648|
000096  7008              STRB     r0,[r1,#0]
                  |L7.152|
;;;337              
;;;338    		}
;;;339            else  //
;;;340            {
;;;341               // bsp_Diwen_Updatedata(0x000A,0);  
;;;342            }
;;;343            
;;;344         if(CAPTURE_STA_TIM3CH[1]&0X80)//成功捕获到了一次上升沿
000098  486c              LDR      r0,|L7.588|
00009a  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
00009c  f0000080          AND      r0,r0,#0x80
0000a0  2800              CMP      r0,#0
0000a2  d041              BEQ      |L7.296|
;;;345    		{
;;;346                temp = 0;
0000a4  2400              MOVS     r4,#0
;;;347    			temp=CAPTURE_STA_TIM3CH[1]&0X3F;
0000a6  4869              LDR      r0,|L7.588|
0000a8  7840              LDRB     r0,[r0,#1]  ; CAPTURE_STA_TIM3CH
0000aa  f000043f          AND      r4,r0,#0x3f
;;;348    			temp*=65536;//溢出时间总和
0000ae  f64f70ff          MOV      r0,#0xffff
0000b2  ea004404          AND      r4,r0,r4,LSL #16
;;;349    			temp+=CAPTURE_VAL_TIM3CH[1];//得到总的高电平时间
0000b6  4866              LDR      r0,|L7.592|
0000b8  8840              LDRH     r0,[r0,#2]  ; CAPTURE_VAL_TIM3CH
0000ba  4420              ADD      r0,r0,r4
0000bc  b284              UXTH     r4,r0
;;;350    			//bsp_Diwen_Updatedata(0x000B,10000/temp);  
;;;351                #ifdef USEDEBUG
;;;352                printf("通道2 :HIGH:%d us  FREQUENCE :%4.2fKHz\r\n",temp,1000.0/(float)temp);	//打印总的高点平时间
0000be  4620              MOV      r0,r4
0000c0  f7fffffe          BL       __aeabi_ui2f
0000c4  4682              MOV      r10,r0
0000c6  f7fffffe          BL       __aeabi_f2d
0000ca  4607              MOV      r7,r0
0000cc  463a              MOV      r2,r7
0000ce  460b              MOV      r3,r1
0000d0  2000              MOVS     r0,#0
0000d2  4960              LDR      r1,|L7.596|
0000d4  f7fffffe          BL       __aeabi_ddiv
0000d8  4605              MOV      r5,r0
0000da  462a              MOV      r2,r5
0000dc  460b              MOV      r3,r1
0000de  4621              MOV      r1,r4
0000e0  a06a              ADR      r0,|L7.652|
0000e2  f7fffffe          BL       __2printf
;;;353                #endif
;;;354    			CAPTURE_STA_TIM3CH[1]=0;//开启下一次捕获
0000e6  2000              MOVS     r0,#0
0000e8  4958              LDR      r1,|L7.588|
0000ea  7048              STRB     r0,[r1,#1]
;;;355                 fre = 1000.0/temp;
0000ec  4620              MOV      r0,r4
0000ee  f7fffffe          BL       __aeabi_ui2d
0000f2  4607              MOV      r7,r0
0000f4  463a              MOV      r2,r7
0000f6  460b              MOV      r3,r1
0000f8  2000              MOVS     r0,#0
0000fa  4956              LDR      r1,|L7.596|
0000fc  f7fffffe          BL       __aeabi_ddiv
000100  4605              MOV      r5,r0
000102  f7fffffe          BL       __aeabi_d2f
000106  4681              MOV      r9,r0
;;;356                if((fre>=CHECKFRELOW) &&(fre<=CHECKFREHIGH))  g_checkfreok[1]++;
000108  f04f4182          MOV      r1,#0x41000000
00010c  4648              MOV      r0,r9
00010e  f7fffffe          BL       __aeabi_cfrcmple
000112  d809              BHI      |L7.296|
000114  495b              LDR      r1,|L7.644|
000116  4648              MOV      r0,r9
000118  f7fffffe          BL       __aeabi_cfcmple
00011c  d804              BHI      |L7.296|
00011e  485a              LDR      r0,|L7.648|
000120  7840              LDRB     r0,[r0,#1]  ; g_checkfreok
000122  1c40              ADDS     r0,r0,#1
000124  4958              LDR      r1,|L7.648|
000126  7048              STRB     r0,[r1,#1]
                  |L7.296|
;;;357              
;;;358    		} 
;;;359            else  //
;;;360            {
;;;361               // bsp_Diwen_Updatedata(0x000B,0);  
;;;362            }
;;;363            
;;;364          if(CAPTURE_STA_TIM3CH[2]&0X80)//成功捕获到了一次上升沿
000128  4848              LDR      r0,|L7.588|
00012a  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
00012c  f0000080          AND      r0,r0,#0x80
000130  2800              CMP      r0,#0
000132  d041              BEQ      |L7.440|
;;;365    		{
;;;366                temp = 0;
000134  2400              MOVS     r4,#0
;;;367    			temp=CAPTURE_STA_TIM3CH[2]&0X3F;
000136  4845              LDR      r0,|L7.588|
000138  7880              LDRB     r0,[r0,#2]  ; CAPTURE_STA_TIM3CH
00013a  f000043f          AND      r4,r0,#0x3f
;;;368    			temp*=65536;//溢出时间总和
00013e  f64f70ff          MOV      r0,#0xffff
000142  ea004404          AND      r4,r0,r4,LSL #16
;;;369    			temp+=CAPTURE_VAL_TIM3CH[2];//得到总的高电平时间
000146  4842              LDR      r0,|L7.592|
000148  8880              LDRH     r0,[r0,#4]  ; CAPTURE_VAL_TIM3CH
00014a  4420              ADD      r0,r0,r4
00014c  b284              UXTH     r4,r0
;;;370    			//bsp_Diwen_Updatedata(0x000C,10000/temp); 
;;;371                #ifdef USEDEBUG            
;;;372                printf("通道3 :HIGH:%d us  FREQUENCE :%4.2fKHz\r\n",temp,1000.0/(float)temp);	//打印总的高点平时间
00014e  4620              MOV      r0,r4
000150  f7fffffe          BL       __aeabi_ui2f
000154  4682              MOV      r10,r0
000156  f7fffffe          BL       __aeabi_f2d
00015a  4607              MOV      r7,r0
00015c  463a              MOV      r2,r7
00015e  460b              MOV      r3,r1
000160  2000              MOVS     r0,#0
000162  493c              LDR      r1,|L7.596|
000164  f7fffffe          BL       __aeabi_ddiv
000168  4605              MOV      r5,r0
00016a  462a              MOV      r2,r5
00016c  460b              MOV      r3,r1
00016e  4621              MOV      r1,r4
000170  a051              ADR      r0,|L7.696|
000172  f7fffffe          BL       __2printf
;;;373                #endif
;;;374    			CAPTURE_STA_TIM3CH[2]=0;//开启下一次捕获
000176  2000              MOVS     r0,#0
000178  4934              LDR      r1,|L7.588|
00017a  7088              STRB     r0,[r1,#2]
;;;375                 fre = 1000.0/temp;
00017c  4620              MOV      r0,r4
00017e  f7fffffe          BL       __aeabi_ui2d
000182  4607              MOV      r7,r0
000184  463a              MOV      r2,r7
000186  460b              MOV      r3,r1
000188  2000              MOVS     r0,#0
00018a  4932              LDR      r1,|L7.596|
00018c  f7fffffe          BL       __aeabi_ddiv
000190  4605              MOV      r5,r0
000192  f7fffffe          BL       __aeabi_d2f
000196  4681              MOV      r9,r0
;;;376                if((fre>=CHECKFRELOW) &&(fre<=CHECKFREHIGH))  g_checkfreok[2]++;
000198  f04f4182          MOV      r1,#0x41000000
00019c  4648              MOV      r0,r9
00019e  f7fffffe          BL       __aeabi_cfrcmple
0001a2  d809              BHI      |L7.440|
0001a4  4937              LDR      r1,|L7.644|
0001a6  4648              MOV      r0,r9
0001a8  f7fffffe          BL       __aeabi_cfcmple
0001ac  d804              BHI      |L7.440|
0001ae  4836              LDR      r0,|L7.648|
0001b0  7880              LDRB     r0,[r0,#2]  ; g_checkfreok
0001b2  1c40              ADDS     r0,r0,#1
0001b4  4934              LDR      r1,|L7.648|
0001b6  7088              STRB     r0,[r1,#2]
                  |L7.440|
;;;377              
;;;378    		}
;;;379            else  //
;;;380            {
;;;381              //  bsp_Diwen_Updatedata(0x000C,0);  
;;;382            }
;;;383            
;;;384          if(CAPTURE_STA_TIM3CH[3]&0X80)//成功捕获到了一次上升沿
0001b8  4824              LDR      r0,|L7.588|
0001ba  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
0001bc  f0000080          AND      r0,r0,#0x80
0001c0  2800              CMP      r0,#0
0001c2  d041              BEQ      |L7.584|
;;;385    		{
;;;386                temp = 0;
0001c4  2400              MOVS     r4,#0
;;;387    			temp=CAPTURE_STA_TIM3CH[3]&0X3F;
0001c6  4821              LDR      r0,|L7.588|
0001c8  78c0              LDRB     r0,[r0,#3]  ; CAPTURE_STA_TIM3CH
0001ca  f000043f          AND      r4,r0,#0x3f
;;;388    			temp*=65536;//溢出时间总和
0001ce  f64f70ff          MOV      r0,#0xffff
0001d2  ea004404          AND      r4,r0,r4,LSL #16
;;;389    			temp+=CAPTURE_VAL_TIM3CH[3];//得到总的高电平时间
0001d6  481e              LDR      r0,|L7.592|
0001d8  88c0              LDRH     r0,[r0,#6]  ; CAPTURE_VAL_TIM3CH
0001da  4420              ADD      r0,r0,r4
0001dc  b284              UXTH     r4,r0
;;;390    			//bsp_Diwen_Updatedata(0x000D,10000/temp);  
;;;391                #ifdef USEDEBUG
;;;392                printf("通道4 :HIGH:%d us  FREQUENCE :%4.2fKHz\r\n",temp,1000.0/(float)temp);	//打印总的高点平时间
0001de  4620              MOV      r0,r4
0001e0  f7fffffe          BL       __aeabi_ui2f
0001e4  4682              MOV      r10,r0
0001e6  f7fffffe          BL       __aeabi_f2d
0001ea  4607              MOV      r7,r0
0001ec  463a              MOV      r2,r7
0001ee  460b              MOV      r3,r1
0001f0  2000              MOVS     r0,#0
0001f2  4918              LDR      r1,|L7.596|
0001f4  f7fffffe          BL       __aeabi_ddiv
0001f8  4605              MOV      r5,r0
0001fa  462a              MOV      r2,r5
0001fc  460b              MOV      r3,r1
0001fe  4621              MOV      r1,r4
000200  a038              ADR      r0,|L7.740|
000202  f7fffffe          BL       __2printf
;;;393                #endif
;;;394    			CAPTURE_STA_TIM3CH[3]=0;//开启下一次捕获
000206  2000              MOVS     r0,#0
000208  4910              LDR      r1,|L7.588|
00020a  70c8              STRB     r0,[r1,#3]
;;;395                 fre = 1000.0/temp;
00020c  4620              MOV      r0,r4
00020e  f7fffffe          BL       __aeabi_ui2d
000212  4607              MOV      r7,r0
000214  463a              MOV      r2,r7
000216  460b              MOV      r3,r1
000218  2000              MOVS     r0,#0
00021a  490e              LDR      r1,|L7.596|
00021c  f7fffffe          BL       __aeabi_ddiv
000220  4605              MOV      r5,r0
000222  f7fffffe          BL       __aeabi_d2f
000226  4681              MOV      r9,r0
;;;396                if((fre>=CHECKFRELOW) &&(fre<=CHECKFREHIGH))  g_checkfreok[3]++;
000228  f04f4182          MOV      r1,#0x41000000
00022c  4648              MOV      r0,r9
00022e  f7fffffe          BL       __aeabi_cfrcmple
000232  d809              BHI      |L7.584|
000234  4913              LDR      r1,|L7.644|
000236  4648              MOV      r0,r9
000238  f7fffffe          BL       __aeabi_cfcmple
00023c  d804              BHI      |L7.584|
00023e  4812              LDR      r0,|L7.648|
000240  78c0              LDRB     r0,[r0,#3]  ; g_checkfreok
000242  1c40              ADDS     r0,r0,#1
000244  4910              LDR      r1,|L7.648|
000246  70c8              STRB     r0,[r1,#3]
                  |L7.584|
;;;397              
;;;398    		} 
;;;399            else  //
;;;400            {
;;;401               // bsp_Diwen_Updatedata(0x000D,0);  
;;;402            }
;;;403            
;;;404        
;;;405    }
000248  e8bd87f0          POP      {r4-r10,pc}
;;;406    
                          ENDP

                  |L7.588|
                          DCD      CAPTURE_STA_TIM3CH
                  |L7.592|
                          DCD      CAPTURE_VAL_TIM3CH
                  |L7.596|
                          DCD      0x408f4000
                  |L7.600|
000258  cda8b5c0          DCB      205,168,181,192,"1 :HIGH:%d us  FREQUENCE :%4.2fKHz\r\n",0
00025c  31203a48
000260  4947483a
000264  25642075
000268  73202046
00026c  52455155
000270  454e4345
000274  203a2534
000278  2e32664b
00027c  487a0d0a
000280  00      
000281  00                DCB      0
000282  00                DCB      0
000283  00                DCB      0
                  |L7.644|
                          DCD      0x41a00000
                  |L7.648|
                          DCD      g_checkfreok
                  |L7.652|
00028c  cda8b5c0          DCB      205,168,181,192,"2 :HIGH:%d us  FREQUENCE :%4.2fKHz\r\n",0
000290  32203a48
000294  4947483a
000298  25642075
00029c  73202046
0002a0  52455155
0002a4  454e4345
0002a8  203a2534
0002ac  2e32664b
0002b0  487a0d0a
0002b4  00      
0002b5  00                DCB      0
0002b6  00                DCB      0
0002b7  00                DCB      0
                  |L7.696|
0002b8  cda8b5c0          DCB      205,168,181,192,"3 :HIGH:%d us  FREQUENCE :%4.2fKHz\r\n",0
0002bc  33203a48
0002c0  4947483a
0002c4  25642075
0002c8  73202046
0002cc  52455155
0002d0  454e4345
0002d4  203a2534
0002d8  2e32664b
0002dc  487a0d0a
0002e0  00      
0002e1  00                DCB      0
0002e2  00                DCB      0
0002e3  00                DCB      0
                  |L7.740|
0002e4  cda8b5c0          DCB      205,168,181,192,"4 :HIGH:%d us  FREQUENCE :%4.2fKHz\r\n",0
0002e8  34203a48
0002ec  4947483a
0002f0  25642075
0002f4  73202046
0002f8  52455155
0002fc  454e4345
000300  203a2534
000304  2e32664b
000308  487a0d0a
00030c  00      
00030d  00                DCB      0
00030e  00                DCB      0
00030f  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  TIM3_ICInitStructure
                          %        10

                          AREA ||.data||, DATA, ALIGN=1

                  count
000000  0000              DCW      0x0000
                  secondflag
000002  00                DCB      0x00
                  CAPTURE_STA_TIM3CH
000003  00                DCB      0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  CAPTURE_VAL_TIM3CH
                          %        8
                  CAPTURE_UP_TIM3CH
                          %        8
                  CAPTURE_DOWN_TIM3CH
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_tim_capture.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_bsp_tim_capture_c_count____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_bsp_tim_capture_c_count____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_bsp_tim_capture_c_count____REVSH|
#line 128
|__asm___17_bsp_tim_capture_c_count____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
