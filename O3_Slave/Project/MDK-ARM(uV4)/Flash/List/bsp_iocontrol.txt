; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_iocontrol.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_iocontrol.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\User -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User\app\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_iocontrol.crf ..\..\User\bsp\src\bsp_iocontrol.c]
                          THUMB

                          AREA ||i.bsp_IOOff||, CODE, READONLY, ALIGN=2

                  bsp_IOOff PROC
;;;87     */
;;;88     void bsp_IOOff(uint8_t _no)
000000  2801              CMP      r0,#1
;;;89     {
;;;90     	//_no--;
;;;91     
;;;92     	if (_no == 1)
000002  d103              BNE      |L1.12|
;;;93     	{
;;;94     		GPIO_PORT_IO1->BRR = GPIO_PIN_IO1;
000004  03c1              LSLS     r1,r0,#15
000006  4a11              LDR      r2,|L1.76|
000008  6011              STR      r1,[r2,#0]
00000a  e01d              B        |L1.72|
                  |L1.12|
;;;95     	}
;;;96     	else if (_no == 2)
00000c  2802              CMP      r0,#2
00000e  d103              BNE      |L1.24|
;;;97     	{
;;;98     		GPIO_PORT_IO2->BRR = GPIO_PIN_IO2;
000010  2101              MOVS     r1,#1
000012  4a0f              LDR      r2,|L1.80|
000014  6011              STR      r1,[r2,#0]
000016  e017              B        |L1.72|
                  |L1.24|
;;;99     	}
;;;100    	else if (_no == 3)
000018  2803              CMP      r0,#3
00001a  d103              BNE      |L1.36|
;;;101    	{
;;;102    		GPIO_PORT_IO3->BRR = GPIO_PIN_IO3;
00001c  2102              MOVS     r1,#2
00001e  4a0c              LDR      r2,|L1.80|
000020  6011              STR      r1,[r2,#0]
000022  e011              B        |L1.72|
                  |L1.36|
;;;103    	}
;;;104    	else if (_no == 4)
000024  2804              CMP      r0,#4
000026  d103              BNE      |L1.48|
;;;105    	{
;;;106    		GPIO_PORT_IO4->BRR = GPIO_PIN_IO4;
000028  2108              MOVS     r1,#8
00002a  4a09              LDR      r2,|L1.80|
00002c  6011              STR      r1,[r2,#0]
00002e  e00b              B        |L1.72|
                  |L1.48|
;;;107    	}
;;;108        else if (_no == 5)
000030  2805              CMP      r0,#5
000032  d103              BNE      |L1.60|
;;;109    	{
;;;110    		GPIO_PORT_IO5->BRR = GPIO_PIN_IO5;
000034  2110              MOVS     r1,#0x10
000036  4a06              LDR      r2,|L1.80|
000038  6011              STR      r1,[r2,#0]
00003a  e005              B        |L1.72|
                  |L1.60|
;;;111    	}
;;;112        
;;;113        else if (_no == 6)
00003c  2806              CMP      r0,#6
00003e  d103              BNE      |L1.72|
;;;114    	{
;;;115    		GPIO_PORT_IO6->BRR = GPIO_PIN_IO6;
000040  f44f7180          MOV      r1,#0x100
000044  4a01              LDR      r2,|L1.76|
000046  6011              STR      r1,[r2,#0]
                  |L1.72|
;;;116    	}
;;;117    }
000048  4770              BX       lr
;;;118    
                          ENDP

00004a  0000              DCW      0x0000
                  |L1.76|
                          DCD      0x40010814
                  |L1.80|
                          DCD      0x40010c14

                          AREA ||i.bsp_IOOn||, CODE, READONLY, ALIGN=2

                  bsp_IOOn PROC
;;;126    */
;;;127    void bsp_IOOn(uint8_t _no)
000000  2801              CMP      r0,#1
;;;128    {
;;;129    	//_no--;
;;;130    
;;;131    	if (_no == 1)
000002  d103              BNE      |L2.12|
;;;132    	{
;;;133    		GPIO_PORT_IO1->BSRR = GPIO_PIN_IO1;
000004  03c1              LSLS     r1,r0,#15
000006  4a11              LDR      r2,|L2.76|
000008  6011              STR      r1,[r2,#0]
00000a  e01d              B        |L2.72|
                  |L2.12|
;;;134    	}
;;;135    	else if (_no == 2)
00000c  2802              CMP      r0,#2
00000e  d103              BNE      |L2.24|
;;;136    	{
;;;137    		GPIO_PORT_IO2->BSRR = GPIO_PIN_IO2;
000010  2101              MOVS     r1,#1
000012  4a0f              LDR      r2,|L2.80|
000014  6011              STR      r1,[r2,#0]
000016  e017              B        |L2.72|
                  |L2.24|
;;;138    	}
;;;139    	else if (_no == 3)
000018  2803              CMP      r0,#3
00001a  d103              BNE      |L2.36|
;;;140    	{
;;;141    		GPIO_PORT_IO3->BSRR = GPIO_PIN_IO3;
00001c  2102              MOVS     r1,#2
00001e  4a0c              LDR      r2,|L2.80|
000020  6011              STR      r1,[r2,#0]
000022  e011              B        |L2.72|
                  |L2.36|
;;;142    	}
;;;143    	else if (_no == 4)
000024  2804              CMP      r0,#4
000026  d103              BNE      |L2.48|
;;;144    	{
;;;145    		GPIO_PORT_IO4->BSRR = GPIO_PIN_IO4;
000028  2108              MOVS     r1,#8
00002a  4a09              LDR      r2,|L2.80|
00002c  6011              STR      r1,[r2,#0]
00002e  e00b              B        |L2.72|
                  |L2.48|
;;;146    	}
;;;147        else if (_no == 5)
000030  2805              CMP      r0,#5
000032  d103              BNE      |L2.60|
;;;148    	{
;;;149    		GPIO_PORT_IO5->BSRR = GPIO_PIN_IO5;
000034  2110              MOVS     r1,#0x10
000036  4a06              LDR      r2,|L2.80|
000038  6011              STR      r1,[r2,#0]
00003a  e005              B        |L2.72|
                  |L2.60|
;;;150    	}
;;;151        else if (_no == 6)
00003c  2806              CMP      r0,#6
00003e  d103              BNE      |L2.72|
;;;152    	{
;;;153    		GPIO_PORT_IO6->BSRR = GPIO_PIN_IO6;
000040  f44f7180          MOV      r1,#0x100
000044  4a01              LDR      r2,|L2.76|
000046  6011              STR      r1,[r2,#0]
                  |L2.72|
;;;154    	}
;;;155    }
000048  4770              BX       lr
;;;156    
                          ENDP

00004a  0000              DCW      0x0000
                  |L2.76|
                          DCD      0x40010810
                  |L2.80|
                          DCD      0x40010c10

                          AREA ||i.bsp_IOToggle||, CODE, READONLY, ALIGN=2

                  bsp_IOToggle PROC
;;;164    */
;;;165    void bsp_IOToggle(uint8_t _no)
000000  2801              CMP      r0,#1
;;;166    {
;;;167    	if (_no == 1)
000002  d106              BNE      |L3.18|
;;;168    	{
;;;169    		GPIO_PORT_IO1->ODR ^= GPIO_PIN_IO1;
000004  4919              LDR      r1,|L3.108|
000006  6809              LDR      r1,[r1,#0]
000008  f4814100          EOR      r1,r1,#0x8000
00000c  4a17              LDR      r2,|L3.108|
00000e  6011              STR      r1,[r2,#0]
000010  e02b              B        |L3.106|
                  |L3.18|
;;;170    	}
;;;171    	else if (_no == 2)
000012  2802              CMP      r0,#2
000014  d106              BNE      |L3.36|
;;;172    	{
;;;173    		GPIO_PORT_IO2->ODR ^= GPIO_PIN_IO2;
000016  4916              LDR      r1,|L3.112|
000018  6809              LDR      r1,[r1,#0]
00001a  f0810101          EOR      r1,r1,#1
00001e  4a14              LDR      r2,|L3.112|
000020  6011              STR      r1,[r2,#0]
000022  e022              B        |L3.106|
                  |L3.36|
;;;174    	}
;;;175    	else if (_no == 3)
000024  2803              CMP      r0,#3
000026  d106              BNE      |L3.54|
;;;176    	{
;;;177    		GPIO_PORT_IO3->ODR ^= GPIO_PIN_IO3;
000028  4911              LDR      r1,|L3.112|
00002a  6809              LDR      r1,[r1,#0]
00002c  f0810102          EOR      r1,r1,#2
000030  4a0f              LDR      r2,|L3.112|
000032  6011              STR      r1,[r2,#0]
000034  e019              B        |L3.106|
                  |L3.54|
;;;178    	}
;;;179    	else if (_no == 4)
000036  2804              CMP      r0,#4
000038  d106              BNE      |L3.72|
;;;180    	{
;;;181    		GPIO_PORT_IO4->ODR ^= GPIO_PIN_IO4;
00003a  490d              LDR      r1,|L3.112|
00003c  6809              LDR      r1,[r1,#0]
00003e  f0810108          EOR      r1,r1,#8
000042  4a0b              LDR      r2,|L3.112|
000044  6011              STR      r1,[r2,#0]
000046  e010              B        |L3.106|
                  |L3.72|
;;;182    	}
;;;183        else if (_no == 5)
000048  2805              CMP      r0,#5
00004a  d106              BNE      |L3.90|
;;;184    	{
;;;185    		GPIO_PORT_IO5->ODR ^= GPIO_PIN_IO5;
00004c  4908              LDR      r1,|L3.112|
00004e  6809              LDR      r1,[r1,#0]
000050  f0810110          EOR      r1,r1,#0x10
000054  4a06              LDR      r2,|L3.112|
000056  6011              STR      r1,[r2,#0]
000058  e007              B        |L3.106|
                  |L3.90|
;;;186    	}
;;;187        else if (_no == 6)
00005a  2806              CMP      r0,#6
00005c  d105              BNE      |L3.106|
;;;188    	{
;;;189    		GPIO_PORT_IO6->ODR ^= GPIO_PIN_IO6;
00005e  4903              LDR      r1,|L3.108|
000060  6809              LDR      r1,[r1,#0]
000062  f4817180          EOR      r1,r1,#0x100
000066  4a01              LDR      r2,|L3.108|
000068  6011              STR      r1,[r2,#0]
                  |L3.106|
;;;190    	}
;;;191    }
00006a  4770              BX       lr
;;;192    
                          ENDP

                  |L3.108|
                          DCD      0x4001080c
                  |L3.112|
                          DCD      0x40010c0c

                          AREA ||i.bsp_InitIO||, CODE, READONLY, ALIGN=2

                  bsp_InitIO PROC
;;;32     */
;;;33     void bsp_InitIO(void)
000000  b508              PUSH     {r3,lr}
;;;34     {
;;;35     	GPIO_InitTypeDef GPIO_InitStructure;
;;;36     
;;;37     	/* ´ò¿ªGPIOÊ±ÖÓ */
;;;38     	RCC_APB2PeriphClockCmd(RCC_ALL_IO, ENABLE);
000002  2101              MOVS     r1,#1
000004  200c              MOVS     r0,#0xc
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;39         GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
00000a  2101              MOVS     r1,#1
00000c  4823              LDR      r0,|L4.156|
00000e  f7fffffe          BL       GPIO_PinRemapConfig
;;;40     	/*
;;;41     		ÅäÖÃËùÓÐµÄIOÖ¸Ê¾µÆGPIOÎªÍÆÍìÊä³öÄ£Ê½
;;;42     		ÓÉÓÚ½«GPIOÉèÖÃÎªÊä³öÊ±£¬GPIOÊä³ö¼Ä´æÆ÷µÄÖµÈ±Ê¡ÊÇ0£¬Òò´Ë»áÇý¶¯IOµãÁÁ.
;;;43     		ÕâÊÇÎÒ²»Ï£ÍûµÄ£¬Òò´ËÔÚ¸Ä±äGPIOÎªÊä³öÇ°£¬ÏÈ¹Ø±ÕIOÖ¸Ê¾µÆ
;;;44     	*/
;;;45     //	bsp_IOOn(1);
;;;46     //	bsp_IOOff(2);
;;;47     //	bsp_IOOff(3);
;;;48     //	bsp_IOOn(4);
;;;49       //  bsp_IOOff(5); //·ÀÖ¹M5310 ¸´Î»
;;;50     
;;;51     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000012  2003              MOVS     r0,#3
000014  f88d0002          STRB     r0,[sp,#2]
;;;52     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* ÍÆÍìÊä³öÄ£Ê½ */
000018  2010              MOVS     r0,#0x10
00001a  f88d0003          STRB     r0,[sp,#3]
;;;53     	
;;;54     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IO1;
00001e  02c0              LSLS     r0,r0,#11
000020  f8ad0000          STRH     r0,[sp,#0]
;;;55     	GPIO_Init(GPIO_PORT_IO1, &GPIO_InitStructure);
000024  4669              MOV      r1,sp
000026  481e              LDR      r0,|L4.160|
000028  f7fffffe          BL       GPIO_Init
;;;56     
;;;57     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IO2;
00002c  2001              MOVS     r0,#1
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;58     	GPIO_Init(GPIO_PORT_IO2, &GPIO_InitStructure);
000032  4669              MOV      r1,sp
000034  481b              LDR      r0,|L4.164|
000036  f7fffffe          BL       GPIO_Init
;;;59     
;;;60     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IO3;
00003a  2002              MOVS     r0,#2
00003c  f8ad0000          STRH     r0,[sp,#0]
;;;61     	GPIO_Init(GPIO_PORT_IO3, &GPIO_InitStructure);
000040  4669              MOV      r1,sp
000042  4818              LDR      r0,|L4.164|
000044  f7fffffe          BL       GPIO_Init
;;;62     
;;;63     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IO4;
000048  2008              MOVS     r0,#8
00004a  f8ad0000          STRH     r0,[sp,#0]
;;;64     	GPIO_Init(GPIO_PORT_IO4, &GPIO_InitStructure);
00004e  4669              MOV      r1,sp
000050  4814              LDR      r0,|L4.164|
000052  f7fffffe          BL       GPIO_Init
;;;65         
;;;66         GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IO5;
000056  2010              MOVS     r0,#0x10
000058  f8ad0000          STRH     r0,[sp,#0]
;;;67     	GPIO_Init(GPIO_PORT_IO5, &GPIO_InitStructure);
00005c  4669              MOV      r1,sp
00005e  4811              LDR      r0,|L4.164|
000060  f7fffffe          BL       GPIO_Init
;;;68         
;;;69         GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IO6;
000064  f44f7080          MOV      r0,#0x100
000068  f8ad0000          STRH     r0,[sp,#0]
;;;70     	GPIO_Init(GPIO_PORT_IO6, &GPIO_InitStructure);
00006c  4669              MOV      r1,sp
00006e  480c              LDR      r0,|L4.160|
000070  f7fffffe          BL       GPIO_Init
;;;71         
;;;72        	bsp_IOOn(1);
000074  2001              MOVS     r0,#1
000076  f7fffffe          BL       bsp_IOOn
;;;73     	bsp_IOOn(2);
00007a  2002              MOVS     r0,#2
00007c  f7fffffe          BL       bsp_IOOn
;;;74     	bsp_IOOn(3);
000080  2003              MOVS     r0,#3
000082  f7fffffe          BL       bsp_IOOn
;;;75     	bsp_IOOn(4);
000086  2004              MOVS     r0,#4
000088  f7fffffe          BL       bsp_IOOn
;;;76         bsp_IOOn(5);   
00008c  2005              MOVS     r0,#5
00008e  f7fffffe          BL       bsp_IOOn
;;;77         bsp_IOOff(6); //·ÀÖ¹M5310 ¸´Î»
000092  2006              MOVS     r0,#6
000094  f7fffffe          BL       bsp_IOOff
;;;78     }
000098  bd08              POP      {r3,pc}
;;;79     
                          ENDP

00009a  0000              DCW      0x0000
                  |L4.156|
                          DCD      0x00300200
                  |L4.160|
                          DCD      0x40010800
                  |L4.164|
                          DCD      0x40010c00

                          AREA ||i.bsp_IsIOOn||, CODE, READONLY, ALIGN=2

                  bsp_IsIOOn PROC
;;;200    */
;;;201    uint8_t bsp_IsIOOn(uint8_t _no)
000000  4601              MOV      r1,r0
;;;202    {
;;;203    	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L5.24|
;;;204    	{
;;;205    		if ((GPIO_PORT_IO1->ODR & GPIO_PIN_IO1) == 0)
000006  4821              LDR      r0,|L5.140|
000008  6800              LDR      r0,[r0,#0]
00000a  f4004000          AND      r0,r0,#0x8000
00000e  b908              CBNZ     r0,|L5.20|
;;;206    		{
;;;207    			return 1;
000010  2001              MOVS     r0,#1
                  |L5.18|
;;;208    		}
;;;209    		return 0;
;;;210    	}
;;;211    	else if (_no == 2)
;;;212    	{
;;;213    		if ((GPIO_PORT_IO2->ODR & GPIO_PIN_IO2) == 0)
;;;214    		{
;;;215    			return 1;
;;;216    		}
;;;217    		return 0;
;;;218    	}
;;;219    	else if (_no == 3)
;;;220    	{
;;;221    		if ((GPIO_PORT_IO3->ODR & GPIO_PIN_IO3) == 0)
;;;222    		{
;;;223    			return 1;
;;;224    		}
;;;225    		return 0;
;;;226    	}
;;;227    	else if (_no == 4)
;;;228    	{
;;;229    		if ((GPIO_PORT_IO4->ODR & GPIO_PIN_IO4) == 0)
;;;230    		{
;;;231    			return 1;
;;;232    		}
;;;233    		return 0;
;;;234    	}
;;;235        
;;;236        else if (_no == 5)
;;;237    	{
;;;238    		if ((GPIO_PORT_IO5->ODR & GPIO_PIN_IO5) == 0)
;;;239    		{
;;;240    			return 1;
;;;241    		}
;;;242    		return 0;
;;;243    	}
;;;244        else if (_no == 6)
;;;245    	{
;;;246    		if ((GPIO_PORT_IO6->ODR & GPIO_PIN_IO6) == 0)
;;;247    		{
;;;248    			return 1;
;;;249    		}
;;;250    		return 0;
;;;251    	}
;;;252    
;;;253    	return 0;
;;;254    }
000012  4770              BX       lr
                  |L5.20|
000014  2000              MOVS     r0,#0                 ;209
000016  e7fc              B        |L5.18|
                  |L5.24|
000018  2902              CMP      r1,#2                 ;211
00001a  d108              BNE      |L5.46|
00001c  481c              LDR      r0,|L5.144|
00001e  6800              LDR      r0,[r0,#0]            ;213
000020  f0000001          AND      r0,r0,#1              ;213
000024  b908              CBNZ     r0,|L5.42|
000026  2001              MOVS     r0,#1                 ;215
000028  e7f3              B        |L5.18|
                  |L5.42|
00002a  2000              MOVS     r0,#0                 ;217
00002c  e7f1              B        |L5.18|
                  |L5.46|
00002e  2903              CMP      r1,#3                 ;219
000030  d108              BNE      |L5.68|
000032  4817              LDR      r0,|L5.144|
000034  6800              LDR      r0,[r0,#0]            ;221
000036  f0000002          AND      r0,r0,#2              ;221
00003a  b908              CBNZ     r0,|L5.64|
00003c  2001              MOVS     r0,#1                 ;223
00003e  e7e8              B        |L5.18|
                  |L5.64|
000040  2000              MOVS     r0,#0                 ;225
000042  e7e6              B        |L5.18|
                  |L5.68|
000044  2904              CMP      r1,#4                 ;227
000046  d108              BNE      |L5.90|
000048  4811              LDR      r0,|L5.144|
00004a  6800              LDR      r0,[r0,#0]            ;229
00004c  f0000008          AND      r0,r0,#8              ;229
000050  b908              CBNZ     r0,|L5.86|
000052  2001              MOVS     r0,#1                 ;231
000054  e7dd              B        |L5.18|
                  |L5.86|
000056  2000              MOVS     r0,#0                 ;233
000058  e7db              B        |L5.18|
                  |L5.90|
00005a  2905              CMP      r1,#5                 ;236
00005c  d108              BNE      |L5.112|
00005e  480c              LDR      r0,|L5.144|
000060  6800              LDR      r0,[r0,#0]            ;238
000062  f0000010          AND      r0,r0,#0x10           ;238
000066  b908              CBNZ     r0,|L5.108|
000068  2001              MOVS     r0,#1                 ;240
00006a  e7d2              B        |L5.18|
                  |L5.108|
00006c  2000              MOVS     r0,#0                 ;242
00006e  e7d0              B        |L5.18|
                  |L5.112|
000070  2906              CMP      r1,#6                 ;244
000072  d108              BNE      |L5.134|
000074  4805              LDR      r0,|L5.140|
000076  6800              LDR      r0,[r0,#0]            ;246
000078  f4007080          AND      r0,r0,#0x100          ;246
00007c  b908              CBNZ     r0,|L5.130|
00007e  2001              MOVS     r0,#1                 ;248
000080  e7c7              B        |L5.18|
                  |L5.130|
000082  2000              MOVS     r0,#0                 ;250
000084  e7c5              B        |L5.18|
                  |L5.134|
000086  2000              MOVS     r0,#0                 ;253
000088  e7c3              B        |L5.18|
;;;255    
                          ENDP

00008a  0000              DCW      0x0000
                  |L5.140|
                          DCD      0x4001080c
                  |L5.144|
                          DCD      0x40010c0c

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_iocontrol.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_iocontrol_c_5a200925____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_iocontrol_c_5a200925____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_iocontrol_c_5a200925____REVSH|
#line 128
|__asm___15_bsp_iocontrol_c_5a200925____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
