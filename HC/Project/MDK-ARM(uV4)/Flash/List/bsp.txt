; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\User -I..\..\User\bsp\inc -I..\..\User\bsp -I..\..\User\app\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;96     extern void SaveScreenToBmp(uint16_t _index);
;;;97     void bsp_Idle(void)
000000  4770              BX       lr
;;;98     {
;;;99     	/* --- 喂狗 */
;;;100    
;;;101    	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;102    
;;;103    	/* 例如 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;104    	//GUI_Exec();
;;;105    
;;;106    	/* 例如 uIP 协议，可以插入uip轮询函数 */
;;;107    
;;;108    	
;;;109    }
;;;110    
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=2

                  bsp_Init PROC
;;;30     */
;;;31     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	/*
;;;34     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;35     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;36     
;;;37     		系统时钟缺省配置为72MHz，如果需要更改，可以修改 system_stm32f10x.c 文件
;;;38     	*/
;;;39     
;;;40     	/* 优先级分组设置为4 */
;;;41     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;42     	
;;;43     
;;;44     
;;;45     	bsp_InitUart(); 	/* 初始化串口 */
00000a  f7fffffe          BL       bsp_InitUart
;;;46     	bsp_InitLed(); 		/* 初始LED指示灯端口 */
00000e  f7fffffe          BL       bsp_InitLed
;;;47     	bsp_InitKey();		/* 初始化按键 */
000012  f7fffffe          BL       bsp_InitKey
;;;48     	bsp_InitTimer();	/* 初始化系统滴答定时器 (此函数会开中断) */
000016  f7fffffe          BL       bsp_InitTimer
;;;49     	RS485_RX_EN();      //调试添加
00001a  2020              MOVS     r0,#0x20
00001c  4901              LDR      r1,|L2.36|
00001e  6008              STR      r0,[r1,#0]
;;;50     //	bsp_InitADC();		/* 初始化ADC */
;;;51     }
000020  bd10              POP      {r4,pc}
;;;52     
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      0x40010c10

                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=2

                  bsp_RunPer10ms PROC
;;;61     */
;;;62     void bsp_RunPer10ms(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64         static uint8_t  uc_count=0;
;;;65     	//bsp_KeyScan();		/* 按键扫描 */
;;;66         uc_count++;
000002  4808              LDR      r0,|L3.36|
000004  7800              LDRB     r0,[r0,#0]  ; uc_count
000006  1c40              ADDS     r0,r0,#1
000008  4906              LDR      r1,|L3.36|
00000a  7008              STRB     r0,[r1,#0]
;;;67         if(uc_count == 50)
00000c  4608              MOV      r0,r1
00000e  7800              LDRB     r0,[r0,#0]  ; uc_count
000010  2832              CMP      r0,#0x32
000012  d105              BNE      |L3.32|
;;;68         {
;;;69             bsp_LedToggle(1); //0.5S闪烁一次 D4
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       bsp_LedToggle
;;;70             uc_count =0;
00001a  2000              MOVS     r0,#0
00001c  4901              LDR      r1,|L3.36|
00001e  7008              STRB     r0,[r1,#0]
                  |L3.32|
;;;71         }
;;;72     }
000020  bd10              POP      {r4,pc}
;;;73     
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      uc_count

                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;82     */
;;;83     void bsp_RunPer1ms(void)
000000  4770              BX       lr
;;;84     {
;;;85     }
;;;86     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  uc_count
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 128
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
